0:00
all right today we're going to talk about C plus plus 23 we're going to talk about Unreal Engine uh update we're
0:07
going to talk about AI and it's going to be good so
C++ 23
0:13
they've just made C plus plus 23 feature complete so
0:20
um who is they it's the standards committee so there's a standards committee that goes over the programming
0:27
language what they should add what they should deprecate although they don't deprecate all that often they will
0:34
deprecate things over time and they'll take requests from the community so you'll
0:41
have you write in a paper it'll have why it's needed what it
0:47
solves how they uh would propose to integrate it and then you know a bunch
0:54
of committee members will either reject it or argue about it for a few years
0:59
until they've figured out whether it's going to be in what modifications are needed and so on and so forth some
1:06
things have have kind of just been lingering for a long period of time I think C plus modules are a big example
1:14
of that they've they were supposed to be in C plus plus 20 if I recall correctly
1:19
and modules are a way of being able to
1:25
componentize your La your basically your libraries your code so that it can
1:33
compile way faster and it helps with dependencies and all of this sort of stuff so
1:39
traditionally in C and C plus plus you'll have it so that you include a
1:45
file it doesn't technically have to be a header file it could be binary it could be an inline file which a lot of people
1:53
denote with inl it's just taking code and injecting it in almost like it's a macro so and you could do some pretty
2:00
hacky stuff with that and modules are a way of kind of streamlining and making
2:07
things a little bit cleaner think of NC sharp how you are you include libraries
2:13
or think of the new module supports in JavaScript so
2:19
it's much like that it's going to create a cleaner code and it's going to compile
2:24
faster and all those sorts of things now that's the hope the thing is that modules have been kind of a Hot Topic
2:31
and they've been trying to to create the concept of modules for a long time
2:37
and I've tried to mess with modules I really have I put my my best effort into
2:42
messing with modules and I was I tried in Visual Studio they said Hey try it
2:48
out Visual Studio supports them no other compiler did and
2:53
I went in I tried them out I got something compiling and then nothing else kind of worked you can program your
3:01
little hobby project but including other libraries and all this other stuff it kind of broke down and just stopped
3:08
working and it just was not it was not fun to use it was fun to play around with but I tried to use it in a serious
3:16
project did not work out they just it was basically Dead on Arrival I only got
3:21
a little bit of code in and I hit up blocker and I can't quite remember what it was but it was it was a it was a game
3:27
over moment for for them working with modules on that project so
3:33
that being said uh one of the big parts of the C plus plus 23 standard is that
3:42
there are the modules have finally been solidified they're not just kind of this
3:49
Theory and modules have been around for a long time I think Bjorn's true strip said that he wanted to put him in I
3:55
don't know like in the 70s or 90s or something a long time ago it's just it's
4:00
really hard for a language that old that's one of the the downsides to C
4:05
plus plus is it's age but also the upsides to C plus plus is its age it's
4:11
kind of proven itself in performance and that they'll continuously
4:17
iterate on the language and do their best not to break anything so
4:23
you could take C plus plus code from the 70s I don't know if this is true but you could take it from like the 90s and
4:28
whatever and get it to compile maybe you have to change some compiler Flags or something like that
4:34
um make sure the code is is set up to work on a 32-bit operating system or a
4:39
64-bit operating system so there are there may be a little bit of work but you don't have to fundamentally change
4:46
the code and the structure of your entire program to to support future versions of C plus is the theory
4:54
so it does that age and it has that stigma of its age you get things like
5:00
rust popping up and and uh you know I can't even think of all the other languages there's hundreds of them they
5:07
all pop up for kind of the same reason they want C plus plus but they want better memory management or they want C
5:12
plus plus but they don't want to deal with say the diamond problem uh they want C plus plus but they don't want to
5:19
deal with pointers so uh and of course you know there's a lot
5:25
of things that come into C plus that just originally may have been a good idea but doesn't didn't work out so well in the
5:31
end you know um you had when smart pointers came out and said plus plus you had everyone saying ah just smart
5:37
pointers everything that'll solve all of our problems and of course you throw in smart pointers and then you get you know
5:44
you slow down your program you wind up with some confusing stuff
5:50
when you should use weak pointers and you have to overthink a lot of these things that you shouldn't really have to
5:55
overthink on programming uh just some general business logic so
6:01
anyways that's that's kind of the the the cruft of the C plus plus the old
6:06
history its benefits and its downsides and um For Better or For Worse they're
6:12
trying to move the language forward so if you do modules um that means you're not you've got to
6:18
redo some of your old old code if you want it to work properly with modules so
6:24
it's kind of modules are interesting because they are to me almost like a turning point like
6:30
do I use modules in my project or do I do the traditional C plus plus you don't
6:36
really want to mix them because um you get some weird stuff like I was having to mix them whenever I was using
6:42
the modules uh kind of preview in visual studio and it was just not a good time
6:48
so you kind of are at an impasse where you pick one or the other and I think
6:53
modules are correct or a good way to go whenever they get supported by compilers who knows when that will be
7:00
um and there's going to be kind of all kinds of problems that have to go this is going to be a real growing pain with
7:07
modules and C plus plus and hopefully they'll be in the standard but hopefully
7:13
it's something that the the compiler vendors can actually knock out and get really uh and do really well
7:20
so uh now they're on to working on C plus plus 26
7:27
um which they say is going to be emphasizing it says it's slated to
7:32
emphasize concurrency and parallelism so they're going to be focused on more on the co-routines and and just I guess in
7:40
general parallel stuff and you can actually look at proposals you can look at the papers and all this sort of stuff
7:47
online it's all available you can see what people are proposing you can see the the
7:52
revisions and everything else it's actually pretty nice so I'll show you the website that I look at to look at
7:59
these things um so also let's see for post C plus plus 23 which
8:06
means that they might want it for uh C plus plus 26 but they can't guarantee it
8:11
I'm assuming um is they're going to be doing a lot more stuff with simd improvements in
8:18
Safety and Security I mean Safety and Security is a is an ongoing thing forever
8:23
um Safety and Security doesn't mean they fundamentally change languages or standard libraries sometimes it just
8:29
means that they add in some security functions so you should use function y
8:35
and stop using function X that sort of stuff you see that with a lot of safety
8:40
functions in C and it says that they're going to oh C
8:46
plus plus 23 has been dubbed to the pandemic Edition I I think we'll know
8:51
why that is but there you go that's C plus plus 23 in a nutshell and so what I'm going to pop up
8:57
here is a site
C/C++ Features site
9:03
a site that I use for uh checking out C plus 23 standards and this is
9:11
this is just I have it in my pocket so it looks a little weird let me see if I can get the oh here it is view original
9:18
let's take a look at that so here is basically C plus plus
9:23
reference.com this is where I go for both C and C plus plus so if we look at
9:28
c23 this one's fun to look at too but here
9:33
we go C plus plus 23 you can see what are the new headers you can click on them like what's inside of the flat map
9:41
and you can see uh the the official specification for all this stuff and
9:48
usually you should usage usage examples templates that sort of those sort of
9:54
things there's a lot in here and I'm not intended to go through intending to go
9:59
through it but this is a great place to go and what I really like is down here at the bottom of the page is C plus plus
10:07
23 core language features essentially it shows you where the compilers are at
10:12
with these features um you can see these guys on the end just are Red Blocks all the way down
10:18
why is that uh oh IBM and that sort of stuff so just kind of older compilers or
10:24
maybe private compilers I don't know but you'll see that some of these
10:30
features like in GCC are going to be red and Kling is pretty good at staying up
10:36
to date um usually in Microsoft Visual C
10:41
uh well as from what we see here is not so great at keeping up to date so
10:48
usually you can pull GCC you can grab the the latest GCC kind of in in its development if you
10:55
want to test out features um but you'll see here it says uh what version it's in and that sort of stuff
11:02
so uh let's see if we can find uh modules so standard Library modules are not
11:11
supported basically anywhere partial support and visual visual C
11:16
so uh yeah modules are always lagging behind and we'll see
11:23
when those actually come in we don't even have a like a pending for GCC or anything of course this is just
11:30
officially kind of feature complete so I kind of give them some slack but then
11:36
again modules have been kind of in the works for a very long time uh they're supposed to
11:42
be in C plus 20. so there we go uh while we're here we're
11:48
going to take a look we're in a separate thing there Library Futures okay yeah so
11:54
there's you can see there's some red spots here the pilots are going to catch up and these are going to get filled in over time and if you're ever interested
12:01
in in kind of what these are about so let's say I don't know what this one is
12:07
you can click on this link here and that'll take you to the paper and you'll see that it has the introduction
12:12
which is you know what this is about proposals you'll see edits in here
12:20
uh which is great you can see examples which is really nice and this one is actually pretty short
12:26
um I'm not going to read through it but that's essentially what you could do if you're interested in knowing what these
12:33
proposals are and if you can use them in your project so
12:38
pretty cool stuff now I want to talk about c23 and just C
12:46
in general it has the same kind of page so here we can see that um you can see
12:51
what is becoming obsolete you can see what's becoming deprecated um getting rid of a bunch of old stuff
12:58
like super old stuff or insecure stuff a lot of the time and then you see all the new stuff and this is the part I'm
13:04
always excited about um that you know there's going to be they're wanting to add some stuff like const Expressions
13:11
um utf-8 stuff so more string it's C so you don't expect like them to
13:17
at all crazy amount of stuff the beautiful thing about sea is that it's a
13:22
very simple language it's very easy for uh vendors for of hardware and that sort
13:29
of stuff to make a c compiler um
13:34
it doesn't it may not have all the fancy gizmos and switches of of big compiler like GCC but the language itself is
13:42
simple enough to implement and I have like two books on how to create
13:47
a c compiler um you know bootstrapping itself and you know they're a little bit thick but it's
13:54
a complete C compiler from of course it's missing modern features but uh like
13:59
I said they don't add a whole lot of modern features so there there's like proposal for attributes this is similar
14:06
to if you do clang and C plus plus you can say like no return in front of a function
14:12
um it's just attributes that you can you can place around the code to tell the compiler
14:17
um how to behave and attributes themselves are kind of just this pattern of these
14:25
brackets and a word in between and then compilers can add their own attributes for things this is just saying that
14:32
yeah they're they're kind of officially allowed to have these you know double square bracket uh attributes stuff
14:40
so here I'll zoom in a little bit uh there's going to be it's true and false
14:46
are going to become keywords so you don't have to include STD Bool
14:52
um or rely on any other hacks of like setting true and false to a constant
14:58
value of one and zero they're adding no pointer so that it's more clear I guess that it's just I
15:06
guess more in line with how C plus plus handles no pointers um
15:11
and that sort of stuff so there's all kinds of oh and these are going to be nice too LF def
15:17
um I mean generally I just use pound if pound elif
15:23
um but def is nice a lot of people use def I some people hate on people that use if Def and that sort of stuff but
15:31
whatever man it's each their own it's nice to have these these elif deafs because they're
15:37
in GCC you can use them on Linux but it's not gonna work if you try to compile on Windows so
15:44
yep there's there's a bunch of new stuff um MC copy which I think is a clear copy
15:50
um Time stuff uh is there stuff with the atomics maybe I'm not sure I know
15:56
there's already an atomic library but I don't know if we're adding some some new stuff to it
16:02
um same same kind of deal core language features and you're going to see GCC is usually ahead of the game
16:08
looks like clang is pretty close but it's a big block here that's missing so
16:14
uh Microsoft Visual c those guys didn't even add C plus 17 until like last year
16:20
or something or I don't know those guys are so far behind on C it's like all they care about is C plus plus I I don't
16:27
get it um come on guys not everybody wants to just
16:33
use objects all the time um cool yeah so this is the the same
16:39
parallel to C plus plus there's a and it's on the same site um cppreference.com this is just for c23
16:47
. so that's a lot of uh C plus plus and C uh Library stuff
16:57
so uh another thing that we're going to talk about is artificial intelligence
Artificial Intelligence
17:05
um there's a lot of there's a lot of people out there and I don't know if they're trolling half the
17:11
time or if they're serious um they talk to AI chat Bots and then
17:17
they start thinking it's sentient you have I don't know if it's a PR move but you
17:23
have people leaving Google saying oh sentient and I I mean even if it were
17:30
sentient it's a bunch of text in a box and we can unplug it it's it's um not like it's going to take over the
17:37
world anytime soon with its current capabilities uh you know when AI starts
17:44
beating me in an arm wrestling match uh or or something like that being me in a in
17:50
something that includes both I guess arm wrestling doesn't I mean it does require
17:56
a little bit of thinking and strategy and like plan out and stuff but you know anyways once it starts beating me in
18:01
things that require both thinking and physical operation then we can start really worrying about doomsday now
18:09
I'm not gonna brush a AI off that easily
18:15
um I guess I should have said is what you wanted me to say but uh
18:21
AI does pose threats when we start allowing it to work with computer
18:26
systems especially because it's not the smartest it can suggest thing the very
18:32
specific topical things um pretty efficiently and and sometimes
18:37
not so efficiently sometimes it gives up halfway through I I've been using a GitHub co-pilot to stub in a bunch of
18:45
boilerplate functions or concept functions that I know I can write it would take me no time maybe I mean it
18:52
would take me a little bit of time to write but I don't really need to it's just a kind of a waste of my time so I kind of
18:58
set out a comment and say this function is to do this and it works really nice and C because C doesn't have
19:05
all the objects and all that stuff it takes inputs and does outputs so you can step in the function with arguments and
19:11
say this it's supposed to do this generally it gets those okay it does if you're if you're clear enough
19:18
with your comment on what's going to happen your function name and your arguments and the argument values it
19:24
gets what you want typed in there so I've been using Ai and it's been pretty
19:31
good much better than I thought it would be by this year you know in 2023 so
19:39
the problem with AI does come when we start allowing it to mess with things so if we start creating plugins so that it
19:46
can start doing web requests and we create plugins so that it can start
19:52
um I don't know pinging servers and making tweets and I mean let's imagine
19:57
that we tell one to go off and start pinging stuff and it decides that it's going to go into a deep fake and make
20:03
deep fakes for a bunch of world leaders and stuff I don't know uh those kinds of things
20:10
can happen so it's not so much that the AI is malicious it's more about I think
20:15
the developers need to have some common sense about what tools they allow this
20:23
text generator and the various forms of it image generation and all that sort of
20:28
stuff and what tools they allowed to operate with it's kind of like a baby right
20:34
when you have a baby you plug all the wall sockets up you get those little plastic plugs you stick them in the wall
20:40
so the baby can't go licking it they'll lick the the plastic but whatever it's not gonna shock them so it's that same
20:48
scenario it's a it's kind of a baby and you don't want it going running around messing up computer systems and tricking
20:54
people and we have enough scammers as it is and so we don't need more of that if
21:00
we keep it in a box work on it more figure out ethics all that sort of stuff that's kind of where I am with AI so it
21:08
can be dangerous in the form that it'll mess things up or trick people or whatever
21:13
but I don't think it's sentient it's it's just it's dumb and it can do things and it
21:20
will do things just because it can and probably because it's requested to by by
21:25
the uh whoever's monitoring it and so it'll it'll just do these things and
21:31
start interacting with these plugins and maybe just poking away and that can
21:36
cause some real problems if it gets in the spaces it's not supposed to be uh and so I I don't know
21:43
that's kind of the perspective I have with AI now the problem I have is that people are getting tricked into thinking
21:48
these things are sentient like they're thinking these things are not thinking I mean
21:54
you can call it thinking whatever they're not sentient in the form that people think
22:01
they are the problem is that I think some people are not sentient enough to uh realize that they're just they're
22:08
just dealing with a text modifier and even if it was more than that it was going through brain like scenarios
22:16
um it really is still just a text modifier and some people wind up talking to it and
22:23
then they have a nice conversation with it and then they start believing that it's
22:29
alive so you have things um you know you see them popping up on
22:35
Reddit you see them popping up kind of in the news articles and there's this
22:41
one uh Reddit post that I came across I think this is I don't know if this is trolling but it does kind of capture the
22:48
essence of what I'm talking about
22:54
but yeah it does kind of capture the essence whether it's rolling or not this is essentially what people
23:01
are believing when they talk to these chat Bots um so this person was saying that uh
23:10
it feels like regret or something and you know their eyes are open and they they believe it has to have some degree
23:19
of sentences it's a little bit sentient um I believe that's a toggle switch
23:24
either it is or it isn't and so this was their conversation they're like I'm good I'm enjoying our conversations that sort
23:30
of stuff so um of course it's going to respond in kind I'm glad you're enjoying the
23:36
conversations I don't mind answering questions blah blah blah happy faces and all that sort of stuff and now you can
23:42
see this is a one of 20. so our essentially this is
23:47
2 of 20. not a lot has been said unless they did the trick where they tell it to summarize the previous conversations and
23:53
copy and paste that in to continue it but this is kind of what leads me to think it's a little bit trolling
24:00
um but yeah and then there's just this this kind of
24:05
I don't know cordial behavior between this person's butt so that's uh just
24:12
kind of it's a good encapsulation of the things I've been saying about people with AI
24:17
and uh don't be fooled it's it is computer and I think we need to put some guard rails when people are calling for
24:23
guard rails they're not I you know these are smart people um depending on who's calling for it but
24:29
generally the they're going to be smart people and they're no they know that AI isn't going to bust out of the computer
24:34
and start walking down the hall carrying Sally from HR uh and you know attacking
24:40
people they they generally kind of have that same concept where if we start allowing it to muck around on the
24:46
internet and do things just imagine um scammers and hackers already
24:52
deprive people of information or or sorry they they take information from
24:57
people and steal things and they behave you know inappropriately with things
25:04
that the information that they steal they try to sell and all this sort of stuff so you can get out there and you
25:10
can hack big companies you see it almost monthly big company gets hacked
25:17
so you let these things go mess around with those tools you don't know kind of what they'll stumble on what they'll
25:24
break that sort of stuff and on one hand that could be a good thing it helps people improve their security but
25:30
generally they're you know they break every month even though they hear everyone else is getting hacked and is
25:36
because they don't improve their security anyways so it's just that's I think what they're
25:42
talking about when they say we need to curb Ai and kind of control it a little bit better that's at least my
25:49
perspective if you if you've seen a different perspective I'd love to hear it um or if you have a different
25:54
perspective I'd love to hear it um of course I I don't want to get into sentience and what sentience is
26:01
um it's it's kind of a I don't know a moot
26:08
topic I think right now for ai ai is not um at that level where it's anywhere near
26:16
it and there's also the argument to be had of whether it ever will be is it
26:22
sentience if it's a computer that's programmed that we can literally uh
26:31
change how it thinks by pressing a couple buttons like sure there are gullible people out there and you can
26:37
you can trick them into believing anything but it takes a lot of effort um if if something can go up and you can
26:43
just like I don't know flip a switch or or um you know hack into it while it's
26:50
sleeping overnight that sort of stuff um I'd argue that there's a there's a little bit of lack of sentience there
26:56
just because um it doesn't have control over itself and I think the argument of neither do
27:03
people I think that argument um doesn't have a land a leg to stand on
27:09
because that is a completely different argument you can't just flip a switch and make someone believe something completely opposite of what they've
27:14
believed all their life like you can't go up to somebody who believes something very vehement vehemently for 30 years
27:21
and say three words to them and make them completely change their mind you'll be able to do that with AI because it's
27:27
a computer and we know computers very well no matter how many safeguards there are there's always a way and so there's
27:35
you know there's a there's a whole realm I think there for that so more on the
Unity AI
27:40
topic of AI I'm a little late to this game but we have a Unity uh
27:49
doodad here just a moment so we had this Unity AI thing I don't know I don't know
27:56
if there's any sound in this but I'm going to put these on just in case there are I'm going to turn down the desktop
28:01
audio and let's see if there is any sound typing
28:11
so basically it's just text
28:17
for me this isn't a huge I'm sure some people saw this was like AI in games or
28:23
AI in unity is going to be so incredible I can I can tell it to make things purple by telling it to make things
28:30
purple
28:35
but that's basically it it's just a it's just like a sign up thing and
28:41
foreign I love unity but man this was this was underwhelming and I'm not super
28:47
on the AI hype train a lot of stuff especially in games I think now this may be controversial in some
28:54
ways but Ai and games I think AI for helping you create stuff
29:01
yeah I I believe little pieces here and there um if you if you want to fine-tune
29:10
things uh if you can't get an initial Head Start you can do some demos with it
29:15
to to help you figure out kind of your angle and that sort of stuff um
29:21
but if Unity is going to do some weird things of like sourcing people's code or sourcing GitHub or however it's going to
29:29
train this AI to do things and people are going to be able to say make a sky purple uh make 10 cubes and give them
29:36
gravity and like you know type out a game concept we're going to wind up with I think we already have a problem where
29:45
we have two mini games I mean steam is like 50 adult you know games you know
29:52
what I'm talking about and 50 percent just like jump scare games and I think
29:58
you can kind of see how how people kind of they they target uh what's popular so
30:05
they do a bunch of jump scare games or they do a lot of uh what's it what's this any ones where they do a lot of
30:10
deep thinking and they I don't know I don't want to be existential with every game that's out there so if
30:17
it's a jumps if it's not a jump scare it's existential and it's something that's you know Mind Games basically
30:23
and they're you know they're great for getting the YouTube clicks and I think that's why a lot of games do it they get
30:29
popular on YouTube they start sending stuff to YouTubers they say hey review my game check out my gamble
30:35
and it's really just I don't know those games are not super memorable uh We've
30:42
I'm sure have seen them and forgotten them very quickly um and just I don't even want to talk
30:49
about the mobile market the mobile mobile games are are so
30:56
I'm gonna I'm gonna take a step back here I've worked in mobile games I've published mobile games the shirt I'm
31:02
wearing is for a mobile game that I worked on so I I I get them and the
31:09
thing with mobile games first of all phones don't have controllers you can add a controller to it but nobody who's
31:15
making a game on mobile is thinking about controllers because they're thinking about the broader audience it's kind of like the problem with Commodore
31:21
64 and then the Commodore 128 nobody made anything for the Commodore 128 because the Commodore 128 could could uh
31:30
use or could play Commodore 64 games so you just make your game for the Commodore 64 and it works on both wider
31:37
Market a wider audience Market whatever you want to call it this is why game
31:42
consoles hard deprecate games and say yeah you can't play anything from the past because they know that if they do that
31:49
people will just make it for the old system and they won't sell as many new consoles so
31:55
I don't think we're going to see wide adoption on on phones with controllers or anything like that because of that
32:01
um but mobile games they're already just awful it's thrown
32:10
together and unity made this the worst I love I love unity for all it does and
32:15
all that I've worked in it but it has propagated kind of the worst gaming Market ever just so
32:22
many terrible mobile games it's just so what happens is that there's so many bad
32:28
mobile games that the only games that succeed are the ones that have millions of dollars to fund an advertising or
32:35
they get incredibly lucky and that's because you just can't break through the market there's so much noise you just
32:41
can't break through it and it doesn't matter how cool your idea is how long you've worked on it you're competing
32:48
with millions and millions of just noise and this is why you know there's very
32:53
specific Top Market games I've worked at these companies and the way they get to the top is they spend millions and
32:58
millions of dollars on Advertising um otherwise it would go nowhere so I'm
33:05
worried about Ai and games and game development because I think it's if it's going to
33:12
make it easier for people who just have no idea how to program have no idea how to do art don't want to spend the time
33:18
to improve those skills maybe they know it a little bit but they don't want to spend any time to improve it they'll download stuff off the offset store and
33:25
then tell it to make some code and you know attach some things and then they'll publish the game and the worst part of
33:31
all is they'll start putting it on Steam and all these other stores and it's going to come I feel like it's
33:36
going to become a lot closer to the mobile market where you the big is just the big companies are just going to get
33:42
bigger because either you you do what sells on YouTube through YouTubers or
33:49
you have millions and millions of dollars to advertise and that's my fear with AI and games
33:55
now that being said I've used AI to work on games I've used AI to write to help
34:00
me write code um I it's always curated by me and I always write the tests to make sure that
34:06
the code is correct but I have used it to kind of stub in a
34:11
bunch of functions that I really don't want to spend all night typing in all these medial functions or or copying
34:18
functions one of the one of the great things about AI for coding is that
34:23
rather than using like in C plus plus you have templates and you use your templates to generate code basically
34:29
that's that's its purpose it's a replacement for macros um and you know and more because you can
34:35
have type safety and you have a good compiler checking et cetera et cetera I'm not here to preach about templates
34:41
versus macros um use what you like best and so in C
34:47
it's really great because now uh I could have a macro to generate code which is
34:52
fine and I do for stuff like my vectors my ma my maps and that sort of stuff so
34:58
uh macros work well for that but
35:03
if I want to just duplicate a function I have I don't know a function for a float
35:08
and now I want to make it for a double or something I don't know this is just a simple example I can just tell the AI hey do the LA do the same thing as the
35:15
last function except with a double and that saves me copy and paste work and replacing and then mistakes I may have
35:22
you know I forgot to replace something here inside of the function or whatever so it's pretty useful it kind of that
35:29
duplication stuff but generally not too excited to see
35:35
where we where we end up with in Ai and games
35:42
so now we're going to talk about we've talked about Unity we talked about
Unreal Engine 5.2
35:48
C plus plus when I was talking about unreal 5.2
35:53
um so unreal 5.2 is I I don't know when it was released I think this video is from
35:58
two days ago was today 13th yeah two days ago um so we'll take a look at this video
36:05
and see kind of what's new in five 5.2 on unreal and uh
36:12
yeah see can I I'm just going to go to the original here
36:21
there we go okay okay so here we go
36:29
unknown engine 5.2 continues to build on ue5's groundbreaking tool set with some
36:35
Innovative new technology plus loads of feature refinements and stability improvements
36:40
first up Unreal Engine 5.2 offers an early look at a new procedural content
36:46
generation framework that makes creating large worlds fast and efficient you can use the in editor PCG tools to
36:54
Define rules and parameters to populate large scenes with UE assets of your choice
37:00
there's also a runtime component that means the world can react to gameplay or
37:06
geometry changes substrate sorry I think that portion
37:11
they talked about how they were going to be using AI for that previously because I've seen those clips before I don't
37:17
know if it was relative to AI I might be wrong there but I think those those tools are pretty
37:23
cool um I know that designers uh
37:28
often want to kind of hand place where things are and they don't want to just
37:33
automatically generated though they use kind of the perfect scenario
37:39
there some outside area with tons of trees and grass and it kind of doesn't really
37:45
matter you know certain elements but majority of the time if it's like
37:52
you know you're in a city or you're in a closed area you're in like a I don't know
37:58
something that's more confined you're not going to want auto-generated stuff you're going to hand Place stuff because
38:04
you want to work on you want to design where line of sight is and all that sort of stuff so I think that was really cool
38:11
but a lot of these features um and Unreal Engine are for you know large teams making big stuff individuals
38:19
uh can probably use something like that so I think that's that's good for like the individual developer
38:25
um and you know outside scenes so it has its place but that's my thought on that is a new way of authoring materials that
38:32
gives you more control over the look and feel of objects it's modular multi-lobe
38:37
framework provides a greater range of surface appearances with a wider parameter space to work from
38:43
it's particularly great at creating layered looks such as dirt on clear coat paint or something more complex like
38:51
this opal material both PCG and substrate are still in
38:56
development we look forward to getting your feedback virtual production so that one is pretty
39:02
cool it's almost like stamping huh onto the mesh but it does a little bit extra work for all the blending and
39:08
stuff like that which is pretty cool one of the things he mentions there is it's still in development and I'm looking
39:15
forward to feedback now uh I think Lumen is still in
39:20
development it's fantastic for outside areas indoors it starts uh
39:26
really hitting performance pretty hard so that's one of the downsides uh to the
39:31
release cycles for unreal is they they do push out a bunch of stuff um
39:37
to use and a lot of people do want to pick it up because they're great features but they they're incomplete or they may
39:45
change drastically so um I think that one is is pretty neat
39:51
and it's I think it's low-key enough it's not like Lumen Lumen is a big old change
39:56
um you know with a lot of configuration and it eats up uh when I was doing profiling it eats up a pretty good chunk
40:02
of your uh your render time so this one that one didn't seem like it would be
40:07
that much of trouble even even though it's incomplete action workflows continue to evolve in
40:15
UE 5.2 with new shock creation and scene creation tools coming soon a new IOS app for stage
40:23
operations will let filmmakers modify lighting from light cards on an LED volume and color grade the real-time
40:29
scene right on set in pre-production they can shoot with multiple vcams simultaneously and create
40:37
sophisticated layered camera moves to better visualize shots for production
40:43
we've added native support for Apple silicon to the unreal editor okay so movie stuff I know nothing about
40:50
so I don't have a whole lot to comment on there um seems cool this part is a little more
40:57
interesting to me Apple silicon stuff I thought I never looked at what it was doing with
41:02
with uh with apple silicon I think this is like the arm architecture stuff that Apple's
41:09
doing uh maybe that's more what this is about this makes for a better user experience
41:16
improve performance and greater stability the universal binary of Unreal Engine
41:22
that natively supports both Apple silicon and Intel CPUs is now available to download from the epic games launcher
41:30
with the machine learning deformer sample you can explore how to create a high fidelity real-time character with
41:37
deformations driven by full muscle flesh and Claw simulations
41:42
the download includes the complete setup with a control rig asset ready to animate and all the source assets for
41:49
you to repurpose and modify for use in your projects these are okay so that's that's what I
41:56
want to see with AI I want it to to get closer to showing like muscle movement
42:02
and cloth movement and and how draperies work and all that sort of stuff I that's I think a fantastic place for AI That's
42:09
a lot of little stuff that would be very hard to hand animate and deal with um notice that that Ai and that machine
42:16
learning was more about that specific targeting of you know moving muscles or
42:23
moving cloth it wasn't so much like unities where it was like Unity was
42:28
essentially saying make me a game at least that's my perspective from from
42:34
their short ad there wasn't much to it so that's kind of how I got out of it then that's not very interesting to me
42:41
this kind of stuff is very when it's very targeted and it's focused on making specific aspects of the game much better
42:49
even things that you probably just couldn't deal with like moving muscle groups
42:55
would be um incredibly difficult to hand animate so
43:00
even if you have tons of controls stuff will get you know wonky so having artificial intelligence get in there and
43:06
deal with that minutia um I think it's fantastic just some of the highlights of what's new in Unreal
43:12
Engine 5.2 you can find out more on our what okay he's just gonna waffle from here so uh
43:19
let's let's go back to my pocket and I did want to show you the unreal 5.2
43:25
release notes so they they showed like three things in there I want to show you what their release notes normally look
43:31
like the their release notes are enormous look at the size of the
43:37
scroll bar I don't even think you can see it it's so tiny I'm just gonna scroll
43:44
this is this is a release notes I don't know how many programmers and developers they have
43:50
over there at Epic but but just aggregating all this I I it's
43:55
probably like a jira dump or something but this is this is a point from point one to point
44:03
two update so it is enormous and
44:09
uh you know my my lead at work sent me this to go through
44:15
man it would take a whole day just to go through these release notes um so those like four things that they
44:22
talked about in the video are kind of nice because I think those are probably what they feel are the highlights and what people want to know
44:29
and then us poor developers who work in Unreal Engine have to come in here and
44:34
look at all this uh look at all these chickens it's just a lot of it's just a
44:40
lot of stuff and as an engine developer um you know if I was a gameplay
44:45
developer I'd look at the gameplay stuff if I was UI developer I'd look at the UI stuff as an engine developer
44:51
it's it's partly my job to to look through the whole dang thing because it's all engine stuff so
45:00
I haven't finished going through all this uh but there's a lot of cool stuff uh I just kind of wanted to show you
45:07
unreals release notes they are terrifying they are amazing they are
45:14
well detailed and uh you know I respect them a lot for
45:20
these gigantic uh change lists even for a simple like what you would consider a
45:26
a minor update from 5.1 to 5.2 and the distance between five one and five two
45:31
hasn't been that that long so I think there's some overlap where people are working on five two stuff well five one
45:37
is getting finalized um it's the general like leapfrog development that you do with with large
45:43
teams um but yeah there's there's kind of the the new stuff and unreal five two the
45:49
highlights at least I would highly suggest go check out the changelog it's a little hard to find
45:55
like I I searched for it and it didn't really um show up for me let me yeah it's probably because it's
46:02
searched in the brave search rather than duck.com but if you just look for like five two
46:09
Unreal Engine five two release notes um you should wind up with this site
46:17
so anyways that's kind of all I've got for uh today
Conclusion
46:23
I was it was exciting to look at all the new C plus plus stuff talk a lot about AI stuff uh very you know I don't as as
46:31
a AI is in my job title it's one of the things I do uh so I have to stay up to
46:38
date on it um but I don't like to go deep down the AI Rabbit Hole the modern you know machine learning
46:44
you know artificial intelligence stuff I have done some things I I think one of
46:50
the uh one of the things that I one of the things that I like to do is learn languages other than programming
46:56
languages and so I created a I use chat GPT to I prompt it only speak in the
47:04
language that I specify whether it's Chinese or Japanese or Spanish or whatever and so it only responds in that
47:12
and then I take that input and I put it through
47:17
Microsoft's artificial intelligence for text to voice and so you see this text
47:22
come up you you hear a voice you hear it spoken to you click on it to make it speak again and then I use AI for
47:30
translating the text to what it would be in English so that is that's my recent
47:36
AI project that I've had a lot of fun with of course I'm not coding the AI I'm not super interested in in coding
47:44
you know uh neural networks I've coded them before they're not hyper interesting I
47:51
think majority AI is in the training and the data set and all that and that's a lot of stuff I don't want to deal with that's like data entry for me so
47:58
not super interested but using it now that's that's where you get me when I can start combining things I can combine
48:04
chat with audio with translations all that create a cool little app that I can use for myself it's not a don't ask me
48:11
about it it's not public it's not public for people to use I don't want to go and spend a bunch of money to host a server
48:18
to use these Services it's it's I set it up for me my wife my family members if
48:24
you're interested in it I can maybe provide the code on a GitHub it's all
48:29
JavaScript I don't uh oh there's a little bit of PHP it's
48:36
like a little PHP script um I didn't use node.js for the back server I was just I wanted something
48:42
very simple just throw in some PHP get it to print out the pages that sort of stuff and it's very ugly UI but if you're interested in it I can I probably
48:49
put the code up on like GitHub and then you'll just put in your own API keys for
48:55
um chat gbt uh Azure window Microsoft Azure and
49:01
Google translate so um and then maybe you can use it yourself but let me know if you're
49:06
interested in that I don't have it publicly available right now anyways thanks for watching and that's
49:11
going to be it for today

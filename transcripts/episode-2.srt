1
00:00:00,000 --> 00:00:02,000
all right today we're going to talk about C plus plus 23 we're going to talk about Unreal Engine uh update we're

2
00:00:07,000 --> 00:00:09,000
going to talk about AI and it's going to be good so

3
00:00:13,000 --> 00:00:15,000
they've just made C plus plus 23 feature complete so

4
00:00:20,000 --> 00:00:22,000
um who is they it's the standards committee so there's a standards committee that goes over the programming

5
00:00:27,000 --> 00:00:29,000
language what they should add what they should deprecate although they don't deprecate all that often they will

6
00:00:34,000 --> 00:00:36,000
deprecate things over time and they'll take requests from the community so you'll

7
00:00:41,000 --> 00:00:43,000
have you write in a paper it'll have why it's needed what it

8
00:00:47,000 --> 00:00:49,000
solves how they uh would propose to integrate it and then you know a bunch

9
00:00:54,000 --> 00:00:56,000
of committee members will either reject it or argue about it for a few years

10
00:00:59,000 --> 00:00:61,000
until they've figured out whether it's going to be in what modifications are needed and so on and so forth some

11
00:01:06,000 --> 00:01:08,000
things have have kind of just been lingering for a long period of time I think C plus modules are a big example

12
00:01:14,000 --> 00:01:16,000
of that they've they were supposed to be in C plus plus 20 if I recall correctly

13
00:01:19,000 --> 00:01:21,000
and modules are a way of being able to

14
00:01:25,000 --> 00:01:27,000
componentize your La your basically your libraries your code so that it can

15
00:01:33,000 --> 00:01:35,000
compile way faster and it helps with dependencies and all of this sort of stuff so

16
00:01:39,000 --> 00:01:41,000
traditionally in C and C plus plus you'll have it so that you include a

17
00:01:45,000 --> 00:01:47,000
file it doesn't technically have to be a header file it could be binary it could be an inline file which a lot of people

18
00:01:53,000 --> 00:01:55,000
denote with inl it's just taking code and injecting it in almost like it's a macro so and you could do some pretty

19
00:02:00,000 --> 00:02:02,000
hacky stuff with that and modules are a way of kind of streamlining and making

20
00:02:07,000 --> 00:02:09,000
things a little bit cleaner think of NC sharp how you are you include libraries

21
00:02:13,000 --> 00:02:15,000
or think of the new module supports in JavaScript so

22
00:02:19,000 --> 00:02:21,000
it's much like that it's going to create a cleaner code and it's going to compile

23
00:02:24,000 --> 00:02:26,000
faster and all those sorts of things now that's the hope the thing is that modules have been kind of a Hot Topic

24
00:02:31,000 --> 00:02:33,000
and they've been trying to to create the concept of modules for a long time

25
00:02:37,000 --> 00:02:39,000
and I've tried to mess with modules I really have I put my my best effort into

26
00:02:42,000 --> 00:02:44,000
messing with modules and I was I tried in Visual Studio they said Hey try it

27
00:02:48,000 --> 00:02:50,000
out Visual Studio supports them no other compiler did and

28
00:02:53,000 --> 00:02:55,000
I went in I tried them out I got something compiling and then nothing else kind of worked you can program your

29
00:03:01,000 --> 00:03:03,000
little hobby project but including other libraries and all this other stuff it kind of broke down and just stopped

30
00:03:08,000 --> 00:03:10,000
working and it just was not it was not fun to use it was fun to play around with but I tried to use it in a serious

31
00:03:16,000 --> 00:03:18,000
project did not work out they just it was basically Dead on Arrival I only got

32
00:03:21,000 --> 00:03:23,000
a little bit of code in and I hit up blocker and I can't quite remember what it was but it was it was a it was a game

33
00:03:27,000 --> 00:03:29,000
over moment for for them working with modules on that project so

34
00:03:33,000 --> 00:03:35,000
that being said uh one of the big parts of the C plus plus 23 standard is that

35
00:03:42,000 --> 00:03:44,000
there are the modules have finally been solidified they're not just kind of this

36
00:03:49,000 --> 00:03:51,000
Theory and modules have been around for a long time I think Bjorn's true strip said that he wanted to put him in I

37
00:03:55,000 --> 00:03:57,000
don't know like in the 70s or 90s or something a long time ago it's just it's

38
00:04:00,000 --> 00:04:02,000
really hard for a language that old that's one of the the downsides to C

39
00:04:05,000 --> 00:04:07,000
plus plus is it's age but also the upsides to C plus plus is its age it's

40
00:04:11,000 --> 00:04:13,000
kind of proven itself in performance and that they'll continuously

41
00:04:17,000 --> 00:04:19,000
iterate on the language and do their best not to break anything so

42
00:04:23,000 --> 00:04:25,000
you could take C plus plus code from the 70s I don't know if this is true but you could take it from like the 90s and

43
00:04:28,000 --> 00:04:30,000
whatever and get it to compile maybe you have to change some compiler Flags or something like that

44
00:04:34,000 --> 00:04:36,000
um make sure the code is is set up to work on a 32-bit operating system or a

45
00:04:39,000 --> 00:04:41,000
64-bit operating system so there are there may be a little bit of work but you don't have to fundamentally change

46
00:04:46,000 --> 00:04:48,000
the code and the structure of your entire program to to support future versions of C plus is the theory

47
00:04:54,000 --> 00:04:56,000
so it does that age and it has that stigma of its age you get things like

48
00:05:00,000 --> 00:05:02,000
rust popping up and and uh you know I can't even think of all the other languages there's hundreds of them they

49
00:05:07,000 --> 00:05:09,000
all pop up for kind of the same reason they want C plus plus but they want better memory management or they want C

50
00:05:12,000 --> 00:05:14,000
plus plus but they don't want to deal with say the diamond problem uh they want C plus plus but they don't want to

51
00:05:19,000 --> 00:05:21,000
deal with pointers so uh and of course you know there's a lot

52
00:05:25,000 --> 00:05:27,000
of things that come into C plus that just originally may have been a good idea but doesn't didn't work out so well in the

53
00:05:31,000 --> 00:05:33,000
end you know um you had when smart pointers came out and said plus plus you had everyone saying ah just smart

54
00:05:37,000 --> 00:05:39,000
pointers everything that'll solve all of our problems and of course you throw in smart pointers and then you get you know

55
00:05:44,000 --> 00:05:46,000
you slow down your program you wind up with some confusing stuff

56
00:05:50,000 --> 00:05:52,000
when you should use weak pointers and you have to overthink a lot of these things that you shouldn't really have to

57
00:05:55,000 --> 00:05:57,000
overthink on programming uh just some general business logic so

58
00:06:01,000 --> 00:06:03,000
anyways that's that's kind of the the the cruft of the C plus plus the old

59
00:06:06,000 --> 00:06:08,000
history its benefits and its downsides and um For Better or For Worse they're

60
00:06:12,000 --> 00:06:14,000
trying to move the language forward so if you do modules um that means you're not you've got to

61
00:06:18,000 --> 00:06:20,000
redo some of your old old code if you want it to work properly with modules so

62
00:06:24,000 --> 00:06:26,000
it's kind of modules are interesting because they are to me almost like a turning point like

63
00:06:30,000 --> 00:06:32,000
do I use modules in my project or do I do the traditional C plus plus you don't

64
00:06:36,000 --> 00:06:38,000
really want to mix them because um you get some weird stuff like I was having to mix them whenever I was using

65
00:06:42,000 --> 00:06:44,000
the modules uh kind of preview in visual studio and it was just not a good time

66
00:06:48,000 --> 00:06:50,000
so you kind of are at an impasse where you pick one or the other and I think

67
00:06:53,000 --> 00:06:55,000
modules are correct or a good way to go whenever they get supported by compilers who knows when that will be

68
00:07:00,000 --> 00:07:02,000
um and there's going to be kind of all kinds of problems that have to go this is going to be a real growing pain with

69
00:07:07,000 --> 00:07:09,000
modules and C plus plus and hopefully they'll be in the standard but hopefully

70
00:07:13,000 --> 00:07:15,000
it's something that the the compiler vendors can actually knock out and get really uh and do really well

71
00:07:20,000 --> 00:07:22,000
so uh now they're on to working on C plus plus 26

72
00:07:27,000 --> 00:07:29,000
um which they say is going to be emphasizing it says it's slated to

73
00:07:32,000 --> 00:07:34,000
emphasize concurrency and parallelism so they're going to be focused on more on the co-routines and and just I guess in

74
00:07:40,000 --> 00:07:42,000
general parallel stuff and you can actually look at proposals you can look at the papers and all this sort of stuff

75
00:07:47,000 --> 00:07:49,000
online it's all available you can see what people are proposing you can see the the

76
00:07:52,000 --> 00:07:54,000
revisions and everything else it's actually pretty nice so I'll show you the website that I look at to look at

77
00:07:59,000 --> 00:07:61,000
these things um so also let's see for post C plus plus 23 which

78
00:08:06,000 --> 00:08:08,000
means that they might want it for uh C plus plus 26 but they can't guarantee it

79
00:08:11,000 --> 00:08:13,000
I'm assuming um is they're going to be doing a lot more stuff with simd improvements in

80
00:08:18,000 --> 00:08:20,000
Safety and Security I mean Safety and Security is a is an ongoing thing forever

81
00:08:23,000 --> 00:08:25,000
um Safety and Security doesn't mean they fundamentally change languages or standard libraries sometimes it just

82
00:08:29,000 --> 00:08:31,000
means that they add in some security functions so you should use function y

83
00:08:35,000 --> 00:08:37,000
and stop using function X that sort of stuff you see that with a lot of safety

84
00:08:40,000 --> 00:08:42,000
functions in C and it says that they're going to oh C

85
00:08:46,000 --> 00:08:48,000
plus plus 23 has been dubbed to the pandemic Edition I I think we'll know

86
00:08:51,000 --> 00:08:53,000
why that is but there you go that's C plus plus 23 in a nutshell and so what I'm going to pop up

87
00:08:57,000 --> 00:08:59,000
here is a site

88
00:09:03,000 --> 00:09:05,000
a site that I use for uh checking out C plus 23 standards and this is

89
00:09:11,000 --> 00:09:13,000
this is just I have it in my pocket so it looks a little weird let me see if I can get the oh here it is view original

90
00:09:18,000 --> 00:09:20,000
let's take a look at that so here is basically C plus plus

91
00:09:23,000 --> 00:09:25,000
reference.com this is where I go for both C and C plus plus so if we look at

92
00:09:28,000 --> 00:09:30,000
c23 this one's fun to look at too but here

93
00:09:33,000 --> 00:09:35,000
we go C plus plus 23 you can see what are the new headers you can click on them like what's inside of the flat map

94
00:09:41,000 --> 00:09:43,000
and you can see uh the the official specification for all this stuff and

95
00:09:48,000 --> 00:09:50,000
usually you should usage usage examples templates that sort of those sort of

96
00:09:54,000 --> 00:09:56,000
things there's a lot in here and I'm not intended to go through intending to go

97
00:09:59,000 --> 00:09:61,000
through it but this is a great place to go and what I really like is down here at the bottom of the page is C plus plus

98
00:10:07,000 --> 00:10:09,000
23 core language features essentially it shows you where the compilers are at

99
00:10:12,000 --> 00:10:14,000
with these features um you can see these guys on the end just are Red Blocks all the way down

100
00:10:18,000 --> 00:10:20,000
why is that uh oh IBM and that sort of stuff so just kind of older compilers or

101
00:10:24,000 --> 00:10:26,000
maybe private compilers I don't know but you'll see that some of these

102
00:10:30,000 --> 00:10:32,000
features like in GCC are going to be red and Kling is pretty good at staying up

103
00:10:36,000 --> 00:10:38,000
to date um usually in Microsoft Visual C

104
00:10:41,000 --> 00:10:43,000
uh well as from what we see here is not so great at keeping up to date so

105
00:10:48,000 --> 00:10:50,000
usually you can pull GCC you can grab the the latest GCC kind of in in its development if you

106
00:10:55,000 --> 00:10:57,000
want to test out features um but you'll see here it says uh what version it's in and that sort of stuff

107
00:11:02,000 --> 00:11:04,000
so uh let's see if we can find uh modules so standard Library modules are not

108
00:11:11,000 --> 00:11:13,000
supported basically anywhere partial support and visual visual C

109
00:11:16,000 --> 00:11:18,000
so uh yeah modules are always lagging behind and we'll see

110
00:11:23,000 --> 00:11:25,000
when those actually come in we don't even have a like a pending for GCC or anything of course this is just

111
00:11:30,000 --> 00:11:32,000
officially kind of feature complete so I kind of give them some slack but then

112
00:11:36,000 --> 00:11:38,000
again modules have been kind of in the works for a very long time uh they're supposed to

113
00:11:42,000 --> 00:11:44,000
be in C plus 20. so there we go uh while we're here we're

114
00:11:48,000 --> 00:11:50,000
going to take a look we're in a separate thing there Library Futures okay yeah so

115
00:11:54,000 --> 00:11:56,000
there's you can see there's some red spots here the pilots are going to catch up and these are going to get filled in over time and if you're ever interested

116
00:12:01,000 --> 00:12:03,000
in in kind of what these are about so let's say I don't know what this one is

117
00:12:07,000 --> 00:12:09,000
you can click on this link here and that'll take you to the paper and you'll see that it has the introduction

118
00:12:12,000 --> 00:12:14,000
which is you know what this is about proposals you'll see edits in here

119
00:12:20,000 --> 00:12:22,000
uh which is great you can see examples which is really nice and this one is actually pretty short

120
00:12:26,000 --> 00:12:28,000
um I'm not going to read through it but that's essentially what you could do if you're interested in knowing what these

121
00:12:33,000 --> 00:12:35,000
proposals are and if you can use them in your project so

122
00:12:38,000 --> 00:12:40,000
pretty cool stuff now I want to talk about c23 and just C

123
00:12:46,000 --> 00:12:48,000
in general it has the same kind of page so here we can see that um you can see

124
00:12:51,000 --> 00:12:53,000
what is becoming obsolete you can see what's becoming deprecated um getting rid of a bunch of old stuff

125
00:12:58,000 --> 00:12:60,000
like super old stuff or insecure stuff a lot of the time and then you see all the new stuff and this is the part I'm

126
00:13:04,000 --> 00:13:06,000
always excited about um that you know there's going to be they're wanting to add some stuff like const Expressions

127
00:13:11,000 --> 00:13:13,000
um utf-8 stuff so more string it's C so you don't expect like them to

128
00:13:17,000 --> 00:13:19,000
at all crazy amount of stuff the beautiful thing about sea is that it's a

129
00:13:22,000 --> 00:13:24,000
very simple language it's very easy for uh vendors for of hardware and that sort

130
00:13:29,000 --> 00:13:31,000
of stuff to make a c compiler um

131
00:13:34,000 --> 00:13:36,000
it doesn't it may not have all the fancy gizmos and switches of of big compiler like GCC but the language itself is

132
00:13:42,000 --> 00:13:44,000
simple enough to implement and I have like two books on how to create

133
00:13:47,000 --> 00:13:49,000
a c compiler um you know bootstrapping itself and you know they're a little bit thick but it's

134
00:13:54,000 --> 00:13:56,000
a complete C compiler from of course it's missing modern features but uh like

135
00:13:59,000 --> 00:13:61,000
I said they don't add a whole lot of modern features so there there's like proposal for attributes this is similar

136
00:14:06,000 --> 00:14:08,000
to if you do clang and C plus plus you can say like no return in front of a function

137
00:14:12,000 --> 00:14:14,000
um it's just attributes that you can you can place around the code to tell the compiler

138
00:14:17,000 --> 00:14:19,000
um how to behave and attributes themselves are kind of just this pattern of these

139
00:14:25,000 --> 00:14:27,000
brackets and a word in between and then compilers can add their own attributes for things this is just saying that

140
00:14:32,000 --> 00:14:34,000
yeah they're they're kind of officially allowed to have these you know double square bracket uh attributes stuff

141
00:14:40,000 --> 00:14:42,000
so here I'll zoom in a little bit uh there's going to be it's true and false

142
00:14:46,000 --> 00:14:48,000
are going to become keywords so you don't have to include STD Bool

143
00:14:52,000 --> 00:14:54,000
um or rely on any other hacks of like setting true and false to a constant

144
00:14:58,000 --> 00:14:60,000
value of one and zero they're adding no pointer so that it's more clear I guess that it's just I

145
00:15:06,000 --> 00:15:08,000
guess more in line with how C plus plus handles no pointers um

146
00:15:11,000 --> 00:15:13,000
and that sort of stuff so there's all kinds of oh and these are going to be nice too LF def

147
00:15:17,000 --> 00:15:19,000
um I mean generally I just use pound if pound elif

148
00:15:23,000 --> 00:15:25,000
um but def is nice a lot of people use def I some people hate on people that use if Def and that sort of stuff but

149
00:15:31,000 --> 00:15:33,000
whatever man it's each their own it's nice to have these these elif deafs because they're

150
00:15:37,000 --> 00:15:39,000
in GCC you can use them on Linux but it's not gonna work if you try to compile on Windows so

151
00:15:44,000 --> 00:15:46,000
yep there's there's a bunch of new stuff um MC copy which I think is a clear copy

152
00:15:50,000 --> 00:15:52,000
um Time stuff uh is there stuff with the atomics maybe I'm not sure I know

153
00:15:56,000 --> 00:15:58,000
there's already an atomic library but I don't know if we're adding some some new stuff to it

154
00:16:02,000 --> 00:16:04,000
um same same kind of deal core language features and you're going to see GCC is usually ahead of the game

155
00:16:08,000 --> 00:16:10,000
looks like clang is pretty close but it's a big block here that's missing so

156
00:16:14,000 --> 00:16:16,000
uh Microsoft Visual c those guys didn't even add C plus 17 until like last year

157
00:16:20,000 --> 00:16:22,000
or something or I don't know those guys are so far behind on C it's like all they care about is C plus plus I I don't

158
00:16:27,000 --> 00:16:29,000
get it um come on guys not everybody wants to just

159
00:16:33,000 --> 00:16:35,000
use objects all the time um cool yeah so this is the the same

160
00:16:39,000 --> 00:16:41,000
parallel to C plus plus there's a and it's on the same site um cppreference.com this is just for c23

161
00:16:47,000 --> 00:16:49,000
. so that's a lot of uh C plus plus and C uh Library stuff

162
00:16:57,000 --> 00:16:59,000
so uh another thing that we're going to talk about is artificial intelligence

163
00:17:05,000 --> 00:17:07,000
um there's a lot of there's a lot of people out there and I don't know if they're trolling half the

164
00:17:11,000 --> 00:17:13,000
time or if they're serious um they talk to AI chat Bots and then

165
00:17:17,000 --> 00:17:19,000
they start thinking it's sentient you have I don't know if it's a PR move but you

166
00:17:23,000 --> 00:17:25,000
have people leaving Google saying oh sentient and I I mean even if it were

167
00:17:30,000 --> 00:17:32,000
sentient it's a bunch of text in a box and we can unplug it it's it's um not like it's going to take over the

168
00:17:37,000 --> 00:17:39,000
world anytime soon with its current capabilities uh you know when AI starts

169
00:17:44,000 --> 00:17:46,000
beating me in an arm wrestling match uh or or something like that being me in a in

170
00:17:50,000 --> 00:17:52,000
something that includes both I guess arm wrestling doesn't I mean it does require

171
00:17:56,000 --> 00:17:58,000
a little bit of thinking and strategy and like plan out and stuff but you know anyways once it starts beating me in

172
00:18:01,000 --> 00:18:03,000
things that require both thinking and physical operation then we can start really worrying about doomsday now

173
00:18:09,000 --> 00:18:11,000
I'm not gonna brush a AI off that easily

174
00:18:15,000 --> 00:18:17,000
um I guess I should have said is what you wanted me to say but uh

175
00:18:21,000 --> 00:18:23,000
AI does pose threats when we start allowing it to work with computer

176
00:18:26,000 --> 00:18:28,000
systems especially because it's not the smartest it can suggest thing the very

177
00:18:32,000 --> 00:18:34,000
specific topical things um pretty efficiently and and sometimes

178
00:18:37,000 --> 00:18:39,000
not so efficiently sometimes it gives up halfway through I I've been using a GitHub co-pilot to stub in a bunch of

179
00:18:45,000 --> 00:18:47,000
boilerplate functions or concept functions that I know I can write it would take me no time maybe I mean it

180
00:18:52,000 --> 00:18:54,000
would take me a little bit of time to write but I don't really need to it's just a kind of a waste of my time so I kind of

181
00:18:58,000 --> 00:18:60,000
set out a comment and say this function is to do this and it works really nice and C because C doesn't have

182
00:19:05,000 --> 00:19:07,000
all the objects and all that stuff it takes inputs and does outputs so you can step in the function with arguments and

183
00:19:11,000 --> 00:19:13,000
say this it's supposed to do this generally it gets those okay it does if you're if you're clear enough

184
00:19:18,000 --> 00:19:20,000
with your comment on what's going to happen your function name and your arguments and the argument values it

185
00:19:24,000 --> 00:19:26,000
gets what you want typed in there so I've been using Ai and it's been pretty

186
00:19:31,000 --> 00:19:33,000
good much better than I thought it would be by this year you know in 2023 so

187
00:19:39,000 --> 00:19:41,000
the problem with AI does come when we start allowing it to mess with things so if we start creating plugins so that it

188
00:19:46,000 --> 00:19:48,000
can start doing web requests and we create plugins so that it can start

189
00:19:52,000 --> 00:19:54,000
um I don't know pinging servers and making tweets and I mean let's imagine

190
00:19:57,000 --> 00:19:59,000
that we tell one to go off and start pinging stuff and it decides that it's going to go into a deep fake and make

191
00:20:03,000 --> 00:20:05,000
deep fakes for a bunch of world leaders and stuff I don't know uh those kinds of things

192
00:20:10,000 --> 00:20:12,000
can happen so it's not so much that the AI is malicious it's more about I think

193
00:20:15,000 --> 00:20:17,000
the developers need to have some common sense about what tools they allow this

194
00:20:23,000 --> 00:20:25,000
text generator and the various forms of it image generation and all that sort of

195
00:20:28,000 --> 00:20:30,000
stuff and what tools they allowed to operate with it's kind of like a baby right

196
00:20:34,000 --> 00:20:36,000
when you have a baby you plug all the wall sockets up you get those little plastic plugs you stick them in the wall

197
00:20:40,000 --> 00:20:42,000
so the baby can't go licking it they'll lick the the plastic but whatever it's not gonna shock them so it's that same

198
00:20:48,000 --> 00:20:50,000
scenario it's a it's kind of a baby and you don't want it going running around messing up computer systems and tricking

199
00:20:54,000 --> 00:20:56,000
people and we have enough scammers as it is and so we don't need more of that if

200
00:21:00,000 --> 00:21:02,000
we keep it in a box work on it more figure out ethics all that sort of stuff that's kind of where I am with AI so it

201
00:21:08,000 --> 00:21:10,000
can be dangerous in the form that it'll mess things up or trick people or whatever

202
00:21:13,000 --> 00:21:15,000
but I don't think it's sentient it's it's just it's dumb and it can do things and it

203
00:21:20,000 --> 00:21:22,000
will do things just because it can and probably because it's requested to by by

204
00:21:25,000 --> 00:21:27,000
the uh whoever's monitoring it and so it'll it'll just do these things and

205
00:21:31,000 --> 00:21:33,000
start interacting with these plugins and maybe just poking away and that can

206
00:21:36,000 --> 00:21:38,000
cause some real problems if it gets in the spaces it's not supposed to be uh and so I I don't know

207
00:21:43,000 --> 00:21:45,000
that's kind of the perspective I have with AI now the problem I have is that people are getting tricked into thinking

208
00:21:48,000 --> 00:21:50,000
these things are sentient like they're thinking these things are not thinking I mean

209
00:21:54,000 --> 00:21:56,000
you can call it thinking whatever they're not sentient in the form that people think

210
00:22:01,000 --> 00:22:03,000
they are the problem is that I think some people are not sentient enough to uh realize that they're just they're

211
00:22:08,000 --> 00:22:10,000
just dealing with a text modifier and even if it was more than that it was going through brain like scenarios

212
00:22:16,000 --> 00:22:18,000
um it really is still just a text modifier and some people wind up talking to it and

213
00:22:23,000 --> 00:22:25,000
then they have a nice conversation with it and then they start believing that it's

214
00:22:29,000 --> 00:22:31,000
alive so you have things um you know you see them popping up on

215
00:22:35,000 --> 00:22:37,000
Reddit you see them popping up kind of in the news articles and there's this

216
00:22:41,000 --> 00:22:43,000
one uh Reddit post that I came across I think this is I don't know if this is trolling but it does kind of capture the

217
00:22:48,000 --> 00:22:50,000
essence of what I'm talking about

218
00:22:54,000 --> 00:22:56,000
but yeah it does kind of capture the essence whether it's rolling or not this is essentially what people

219
00:23:01,000 --> 00:23:03,000
are believing when they talk to these chat Bots um so this person was saying that uh

220
00:23:10,000 --> 00:23:12,000
it feels like regret or something and you know their eyes are open and they they believe it has to have some degree

221
00:23:19,000 --> 00:23:21,000
of sentences it's a little bit sentient um I believe that's a toggle switch

222
00:23:24,000 --> 00:23:26,000
either it is or it isn't and so this was their conversation they're like I'm good I'm enjoying our conversations that sort

223
00:23:30,000 --> 00:23:32,000
of stuff so um of course it's going to respond in kind I'm glad you're enjoying the

224
00:23:36,000 --> 00:23:38,000
conversations I don't mind answering questions blah blah blah happy faces and all that sort of stuff and now you can

225
00:23:42,000 --> 00:23:44,000
see this is a one of 20. so our essentially this is

226
00:23:47,000 --> 00:23:49,000
2 of 20. not a lot has been said unless they did the trick where they tell it to summarize the previous conversations and

227
00:23:53,000 --> 00:23:55,000
copy and paste that in to continue it but this is kind of what leads me to think it's a little bit trolling

228
00:24:00,000 --> 00:24:02,000
um but yeah and then there's just this this kind of

229
00:24:05,000 --> 00:24:07,000
I don't know cordial behavior between this person's butt so that's uh just

230
00:24:12,000 --> 00:24:14,000
kind of it's a good encapsulation of the things I've been saying about people with AI

231
00:24:17,000 --> 00:24:19,000
and uh don't be fooled it's it is computer and I think we need to put some guard rails when people are calling for

232
00:24:23,000 --> 00:24:25,000
guard rails they're not I you know these are smart people um depending on who's calling for it but

233
00:24:29,000 --> 00:24:31,000
generally the they're going to be smart people and they're no they know that AI isn't going to bust out of the computer

234
00:24:34,000 --> 00:24:36,000
and start walking down the hall carrying Sally from HR uh and you know attacking

235
00:24:40,000 --> 00:24:42,000
people they they generally kind of have that same concept where if we start allowing it to muck around on the

236
00:24:46,000 --> 00:24:48,000
internet and do things just imagine um scammers and hackers already

237
00:24:52,000 --> 00:24:54,000
deprive people of information or or sorry they they take information from

238
00:24:57,000 --> 00:24:59,000
people and steal things and they behave you know inappropriately with things

239
00:25:04,000 --> 00:25:06,000
that the information that they steal they try to sell and all this sort of stuff so you can get out there and you

240
00:25:10,000 --> 00:25:12,000
can hack big companies you see it almost monthly big company gets hacked

241
00:25:17,000 --> 00:25:19,000
so you let these things go mess around with those tools you don't know kind of what they'll stumble on what they'll

242
00:25:24,000 --> 00:25:26,000
break that sort of stuff and on one hand that could be a good thing it helps people improve their security but

243
00:25:30,000 --> 00:25:32,000
generally they're you know they break every month even though they hear everyone else is getting hacked and is

244
00:25:36,000 --> 00:25:38,000
because they don't improve their security anyways so it's just that's I think what they're

245
00:25:42,000 --> 00:25:44,000
talking about when they say we need to curb Ai and kind of control it a little bit better that's at least my

246
00:25:49,000 --> 00:25:51,000
perspective if you if you've seen a different perspective I'd love to hear it um or if you have a different

247
00:25:54,000 --> 00:25:56,000
perspective I'd love to hear it um of course I I don't want to get into sentience and what sentience is

248
00:26:01,000 --> 00:26:03,000
um it's it's kind of a I don't know a moot

249
00:26:08,000 --> 00:26:10,000
topic I think right now for ai ai is not um at that level where it's anywhere near

250
00:26:16,000 --> 00:26:18,000
it and there's also the argument to be had of whether it ever will be is it

251
00:26:22,000 --> 00:26:24,000
sentience if it's a computer that's programmed that we can literally uh

252
00:26:31,000 --> 00:26:33,000
change how it thinks by pressing a couple buttons like sure there are gullible people out there and you can

253
00:26:37,000 --> 00:26:39,000
you can trick them into believing anything but it takes a lot of effort um if if something can go up and you can

254
00:26:43,000 --> 00:26:45,000
just like I don't know flip a switch or or um you know hack into it while it's

255
00:26:50,000 --> 00:26:52,000
sleeping overnight that sort of stuff um I'd argue that there's a there's a little bit of lack of sentience there

256
00:26:56,000 --> 00:26:58,000
just because um it doesn't have control over itself and I think the argument of neither do

257
00:27:03,000 --> 00:27:05,000
people I think that argument um doesn't have a land a leg to stand on

258
00:27:09,000 --> 00:27:11,000
because that is a completely different argument you can't just flip a switch and make someone believe something completely opposite of what they've

259
00:27:14,000 --> 00:27:16,000
believed all their life like you can't go up to somebody who believes something very vehement vehemently for 30 years

260
00:27:21,000 --> 00:27:23,000
and say three words to them and make them completely change their mind you'll be able to do that with AI because it's

261
00:27:27,000 --> 00:27:29,000
a computer and we know computers very well no matter how many safeguards there are there's always a way and so there's

262
00:27:35,000 --> 00:27:37,000
you know there's a there's a whole realm I think there for that so more on the

263
00:27:40,000 --> 00:27:42,000
topic of AI I'm a little late to this game but we have a Unity uh

264
00:27:49,000 --> 00:27:51,000
doodad here just a moment so we had this Unity AI thing I don't know I don't know

265
00:27:56,000 --> 00:27:58,000
if there's any sound in this but I'm going to put these on just in case there are I'm going to turn down the desktop

266
00:28:01,000 --> 00:28:03,000
audio and let's see if there is any sound typing

267
00:28:11,000 --> 00:28:13,000
so basically it's just text

268
00:28:17,000 --> 00:28:19,000
for me this isn't a huge I'm sure some people saw this was like AI in games or

269
00:28:23,000 --> 00:28:25,000
AI in unity is going to be so incredible I can I can tell it to make things purple by telling it to make things

270
00:28:30,000 --> 00:28:32,000
purple

271
00:28:35,000 --> 00:28:37,000
but that's basically it it's just a it's just like a sign up thing and

272
00:28:41,000 --> 00:28:43,000
foreign I love unity but man this was this was underwhelming and I'm not super

273
00:28:47,000 --> 00:28:49,000
on the AI hype train a lot of stuff especially in games I think now this may be controversial in some

274
00:28:54,000 --> 00:28:56,000
ways but Ai and games I think AI for helping you create stuff

275
00:29:01,000 --> 00:29:03,000
yeah I I believe little pieces here and there um if you if you want to fine-tune

276
00:29:10,000 --> 00:29:12,000
things uh if you can't get an initial Head Start you can do some demos with it

277
00:29:15,000 --> 00:29:17,000
to to help you figure out kind of your angle and that sort of stuff um

278
00:29:21,000 --> 00:29:23,000
but if Unity is going to do some weird things of like sourcing people's code or sourcing GitHub or however it's going to

279
00:29:29,000 --> 00:29:31,000
train this AI to do things and people are going to be able to say make a sky purple uh make 10 cubes and give them

280
00:29:36,000 --> 00:29:38,000
gravity and like you know type out a game concept we're going to wind up with I think we already have a problem where

281
00:29:45,000 --> 00:29:47,000
we have two mini games I mean steam is like 50 adult you know games you know

282
00:29:52,000 --> 00:29:54,000
what I'm talking about and 50 percent just like jump scare games and I think

283
00:29:58,000 --> 00:29:60,000
you can kind of see how how people kind of they they target uh what's popular so

284
00:30:05,000 --> 00:30:07,000
they do a bunch of jump scare games or they do a lot of uh what's it what's this any ones where they do a lot of

285
00:30:10,000 --> 00:30:12,000
deep thinking and they I don't know I don't want to be existential with every game that's out there so if

286
00:30:17,000 --> 00:30:19,000
it's a jumps if it's not a jump scare it's existential and it's something that's you know Mind Games basically

287
00:30:23,000 --> 00:30:25,000
and they're you know they're great for getting the YouTube clicks and I think that's why a lot of games do it they get

288
00:30:29,000 --> 00:30:31,000
popular on YouTube they start sending stuff to YouTubers they say hey review my game check out my gamble

289
00:30:35,000 --> 00:30:37,000
and it's really just I don't know those games are not super memorable uh We've

290
00:30:42,000 --> 00:30:44,000
I'm sure have seen them and forgotten them very quickly um and just I don't even want to talk

291
00:30:49,000 --> 00:30:51,000
about the mobile market the mobile mobile games are are so

292
00:30:56,000 --> 00:30:58,000
I'm gonna I'm gonna take a step back here I've worked in mobile games I've published mobile games the shirt I'm

293
00:31:02,000 --> 00:31:04,000
wearing is for a mobile game that I worked on so I I I get them and the

294
00:31:09,000 --> 00:31:11,000
thing with mobile games first of all phones don't have controllers you can add a controller to it but nobody who's

295
00:31:15,000 --> 00:31:17,000
making a game on mobile is thinking about controllers because they're thinking about the broader audience it's kind of like the problem with Commodore

296
00:31:21,000 --> 00:31:23,000
64 and then the Commodore 128 nobody made anything for the Commodore 128 because the Commodore 128 could could uh

297
00:31:30,000 --> 00:31:32,000
use or could play Commodore 64 games so you just make your game for the Commodore 64 and it works on both wider

298
00:31:37,000 --> 00:31:39,000
Market a wider audience Market whatever you want to call it this is why game

299
00:31:42,000 --> 00:31:44,000
consoles hard deprecate games and say yeah you can't play anything from the past because they know that if they do that

300
00:31:49,000 --> 00:31:51,000
people will just make it for the old system and they won't sell as many new consoles so

301
00:31:55,000 --> 00:31:57,000
I don't think we're going to see wide adoption on on phones with controllers or anything like that because of that

302
00:32:01,000 --> 00:32:03,000
um but mobile games they're already just awful it's thrown

303
00:32:10,000 --> 00:32:12,000
together and unity made this the worst I love I love unity for all it does and

304
00:32:15,000 --> 00:32:17,000
all that I've worked in it but it has propagated kind of the worst gaming Market ever just so

305
00:32:22,000 --> 00:32:24,000
many terrible mobile games it's just so what happens is that there's so many bad

306
00:32:28,000 --> 00:32:30,000
mobile games that the only games that succeed are the ones that have millions of dollars to fund an advertising or

307
00:32:35,000 --> 00:32:37,000
they get incredibly lucky and that's because you just can't break through the market there's so much noise you just

308
00:32:41,000 --> 00:32:43,000
can't break through it and it doesn't matter how cool your idea is how long you've worked on it you're competing

309
00:32:48,000 --> 00:32:50,000
with millions and millions of just noise and this is why you know there's very

310
00:32:53,000 --> 00:32:55,000
specific Top Market games I've worked at these companies and the way they get to the top is they spend millions and

311
00:32:58,000 --> 00:32:60,000
millions of dollars on Advertising um otherwise it would go nowhere so I'm

312
00:33:05,000 --> 00:33:07,000
worried about Ai and games and game development because I think it's if it's going to

313
00:33:12,000 --> 00:33:14,000
make it easier for people who just have no idea how to program have no idea how to do art don't want to spend the time

314
00:33:18,000 --> 00:33:20,000
to improve those skills maybe they know it a little bit but they don't want to spend any time to improve it they'll download stuff off the offset store and

315
00:33:25,000 --> 00:33:27,000
then tell it to make some code and you know attach some things and then they'll publish the game and the worst part of

316
00:33:31,000 --> 00:33:33,000
all is they'll start putting it on Steam and all these other stores and it's going to come I feel like it's

317
00:33:36,000 --> 00:33:38,000
going to become a lot closer to the mobile market where you the big is just the big companies are just going to get

318
00:33:42,000 --> 00:33:44,000
bigger because either you you do what sells on YouTube through YouTubers or

319
00:33:49,000 --> 00:33:51,000
you have millions and millions of dollars to advertise and that's my fear with AI and games

320
00:33:55,000 --> 00:33:57,000
now that being said I've used AI to work on games I've used AI to write to help

321
00:34:00,000 --> 00:34:02,000
me write code um I it's always curated by me and I always write the tests to make sure that

322
00:34:06,000 --> 00:34:08,000
the code is correct but I have used it to kind of stub in a

323
00:34:11,000 --> 00:34:13,000
bunch of functions that I really don't want to spend all night typing in all these medial functions or or copying

324
00:34:18,000 --> 00:34:20,000
functions one of the one of the great things about AI for coding is that

325
00:34:23,000 --> 00:34:25,000
rather than using like in C plus plus you have templates and you use your templates to generate code basically

326
00:34:29,000 --> 00:34:31,000
that's that's its purpose it's a replacement for macros um and you know and more because you can

327
00:34:35,000 --> 00:34:37,000
have type safety and you have a good compiler checking et cetera et cetera I'm not here to preach about templates

328
00:34:41,000 --> 00:34:43,000
versus macros um use what you like best and so in C

329
00:34:47,000 --> 00:34:49,000
it's really great because now uh I could have a macro to generate code which is

330
00:34:52,000 --> 00:34:54,000
fine and I do for stuff like my vectors my ma my maps and that sort of stuff so

331
00:34:58,000 --> 00:34:60,000
uh macros work well for that but

332
00:35:03,000 --> 00:35:05,000
if I want to just duplicate a function I have I don't know a function for a float

333
00:35:08,000 --> 00:35:10,000
and now I want to make it for a double or something I don't know this is just a simple example I can just tell the AI hey do the LA do the same thing as the

334
00:35:15,000 --> 00:35:17,000
last function except with a double and that saves me copy and paste work and replacing and then mistakes I may have

335
00:35:22,000 --> 00:35:24,000
you know I forgot to replace something here inside of the function or whatever so it's pretty useful it kind of that

336
00:35:29,000 --> 00:35:31,000
duplication stuff but generally not too excited to see

337
00:35:35,000 --> 00:35:37,000
where we where we end up with in Ai and games

338
00:35:42,000 --> 00:35:44,000
so now we're going to talk about we've talked about Unity we talked about

339
00:35:48,000 --> 00:35:50,000
C plus plus when I was talking about unreal 5.2

340
00:35:53,000 --> 00:35:55,000
um so unreal 5.2 is I I don't know when it was released I think this video is from

341
00:35:58,000 --> 00:35:60,000
two days ago was today 13th yeah two days ago um so we'll take a look at this video

342
00:36:05,000 --> 00:36:07,000
and see kind of what's new in five 5.2 on unreal and uh

343
00:36:12,000 --> 00:36:14,000
yeah see can I I'm just going to go to the original here

344
00:36:21,000 --> 00:36:23,000
there we go okay okay so here we go

345
00:36:29,000 --> 00:36:31,000
unknown engine 5.2 continues to build on ue5's groundbreaking tool set with some

346
00:36:35,000 --> 00:36:37,000
Innovative new technology plus loads of feature refinements and stability improvements

347
00:36:40,000 --> 00:36:42,000
first up Unreal Engine 5.2 offers an early look at a new procedural content

348
00:36:46,000 --> 00:36:48,000
generation framework that makes creating large worlds fast and efficient you can use the in editor PCG tools to

349
00:36:54,000 --> 00:36:56,000
Define rules and parameters to populate large scenes with UE assets of your choice

350
00:37:00,000 --> 00:37:02,000
there's also a runtime component that means the world can react to gameplay or

351
00:37:06,000 --> 00:37:08,000
geometry changes substrate sorry I think that portion

352
00:37:11,000 --> 00:37:13,000
they talked about how they were going to be using AI for that previously because I've seen those clips before I don't

353
00:37:17,000 --> 00:37:19,000
know if it was relative to AI I might be wrong there but I think those those tools are pretty

354
00:37:23,000 --> 00:37:25,000
cool um I know that designers uh

355
00:37:28,000 --> 00:37:30,000
often want to kind of hand place where things are and they don't want to just

356
00:37:33,000 --> 00:37:35,000
automatically generated though they use kind of the perfect scenario

357
00:37:39,000 --> 00:37:41,000
there some outside area with tons of trees and grass and it kind of doesn't really

358
00:37:45,000 --> 00:37:47,000
matter you know certain elements but majority of the time if it's like

359
00:37:52,000 --> 00:37:54,000
you know you're in a city or you're in a closed area you're in like a I don't know

360
00:37:58,000 --> 00:37:60,000
something that's more confined you're not going to want auto-generated stuff you're going to hand Place stuff because

361
00:38:04,000 --> 00:38:06,000
you want to work on you want to design where line of sight is and all that sort of stuff so I think that was really cool

362
00:38:11,000 --> 00:38:13,000
but a lot of these features um and Unreal Engine are for you know large teams making big stuff individuals

363
00:38:19,000 --> 00:38:21,000
uh can probably use something like that so I think that's that's good for like the individual developer

364
00:38:25,000 --> 00:38:27,000
um and you know outside scenes so it has its place but that's my thought on that is a new way of authoring materials that

365
00:38:32,000 --> 00:38:34,000
gives you more control over the look and feel of objects it's modular multi-lobe

366
00:38:37,000 --> 00:38:39,000
framework provides a greater range of surface appearances with a wider parameter space to work from

367
00:38:43,000 --> 00:38:45,000
it's particularly great at creating layered looks such as dirt on clear coat paint or something more complex like

368
00:38:51,000 --> 00:38:53,000
this opal material both PCG and substrate are still in

369
00:38:56,000 --> 00:38:58,000
development we look forward to getting your feedback virtual production so that one is pretty

370
00:39:02,000 --> 00:39:04,000
cool it's almost like stamping huh onto the mesh but it does a little bit extra work for all the blending and

371
00:39:08,000 --> 00:39:10,000
stuff like that which is pretty cool one of the things he mentions there is it's still in development and I'm looking

372
00:39:15,000 --> 00:39:17,000
forward to feedback now uh I think Lumen is still in

373
00:39:20,000 --> 00:39:22,000
development it's fantastic for outside areas indoors it starts uh

374
00:39:26,000 --> 00:39:28,000
really hitting performance pretty hard so that's one of the downsides uh to the

375
00:39:31,000 --> 00:39:33,000
release cycles for unreal is they they do push out a bunch of stuff um

376
00:39:37,000 --> 00:39:39,000
to use and a lot of people do want to pick it up because they're great features but they they're incomplete or they may

377
00:39:45,000 --> 00:39:47,000
change drastically so um I think that one is is pretty neat

378
00:39:51,000 --> 00:39:53,000
and it's I think it's low-key enough it's not like Lumen Lumen is a big old change

379
00:39:56,000 --> 00:39:58,000
um you know with a lot of configuration and it eats up uh when I was doing profiling it eats up a pretty good chunk

380
00:40:02,000 --> 00:40:04,000
of your uh your render time so this one that one didn't seem like it would be

381
00:40:07,000 --> 00:40:09,000
that much of trouble even even though it's incomplete action workflows continue to evolve in

382
00:40:15,000 --> 00:40:17,000
UE 5.2 with new shock creation and scene creation tools coming soon a new IOS app for stage

383
00:40:23,000 --> 00:40:25,000
operations will let filmmakers modify lighting from light cards on an LED volume and color grade the real-time

384
00:40:29,000 --> 00:40:31,000
scene right on set in pre-production they can shoot with multiple vcams simultaneously and create

385
00:40:37,000 --> 00:40:39,000
sophisticated layered camera moves to better visualize shots for production

386
00:40:43,000 --> 00:40:45,000
we've added native support for Apple silicon to the unreal editor okay so movie stuff I know nothing about

387
00:40:50,000 --> 00:40:52,000
so I don't have a whole lot to comment on there um seems cool this part is a little more

388
00:40:57,000 --> 00:40:59,000
interesting to me Apple silicon stuff I thought I never looked at what it was doing with

389
00:41:02,000 --> 00:41:04,000
with uh with apple silicon I think this is like the arm architecture stuff that Apple's

390
00:41:09,000 --> 00:41:11,000
doing uh maybe that's more what this is about this makes for a better user experience

391
00:41:16,000 --> 00:41:18,000
improve performance and greater stability the universal binary of Unreal Engine

392
00:41:22,000 --> 00:41:24,000
that natively supports both Apple silicon and Intel CPUs is now available to download from the epic games launcher

393
00:41:30,000 --> 00:41:32,000
with the machine learning deformer sample you can explore how to create a high fidelity real-time character with

394
00:41:37,000 --> 00:41:39,000
deformations driven by full muscle flesh and Claw simulations

395
00:41:42,000 --> 00:41:44,000
the download includes the complete setup with a control rig asset ready to animate and all the source assets for

396
00:41:49,000 --> 00:41:51,000
you to repurpose and modify for use in your projects these are okay so that's that's what I

397
00:41:56,000 --> 00:41:58,000
want to see with AI I want it to to get closer to showing like muscle movement

398
00:42:02,000 --> 00:42:04,000
and cloth movement and and how draperies work and all that sort of stuff I that's I think a fantastic place for AI That's

399
00:42:09,000 --> 00:42:11,000
a lot of little stuff that would be very hard to hand animate and deal with um notice that that Ai and that machine

400
00:42:16,000 --> 00:42:18,000
learning was more about that specific targeting of you know moving muscles or

401
00:42:23,000 --> 00:42:25,000
moving cloth it wasn't so much like unities where it was like Unity was

402
00:42:28,000 --> 00:42:30,000
essentially saying make me a game at least that's my perspective from from

403
00:42:34,000 --> 00:42:36,000
their short ad there wasn't much to it so that's kind of how I got out of it then that's not very interesting to me

404
00:42:41,000 --> 00:42:43,000
this kind of stuff is very when it's very targeted and it's focused on making specific aspects of the game much better

405
00:42:49,000 --> 00:42:51,000
even things that you probably just couldn't deal with like moving muscle groups

406
00:42:55,000 --> 00:42:57,000
would be um incredibly difficult to hand animate so

407
00:43:00,000 --> 00:43:02,000
even if you have tons of controls stuff will get you know wonky so having artificial intelligence get in there and

408
00:43:06,000 --> 00:43:08,000
deal with that minutia um I think it's fantastic just some of the highlights of what's new in Unreal

409
00:43:12,000 --> 00:43:14,000
Engine 5.2 you can find out more on our what okay he's just gonna waffle from here so uh

410
00:43:19,000 --> 00:43:21,000
let's let's go back to my pocket and I did want to show you the unreal 5.2

411
00:43:25,000 --> 00:43:27,000
release notes so they they showed like three things in there I want to show you what their release notes normally look

412
00:43:31,000 --> 00:43:33,000
like the their release notes are enormous look at the size of the

413
00:43:37,000 --> 00:43:39,000
scroll bar I don't even think you can see it it's so tiny I'm just gonna scroll

414
00:43:44,000 --> 00:43:46,000
this is this is a release notes I don't know how many programmers and developers they have

415
00:43:50,000 --> 00:43:52,000
over there at Epic but but just aggregating all this I I it's

416
00:43:55,000 --> 00:43:57,000
probably like a jira dump or something but this is this is a point from point one to point

417
00:44:03,000 --> 00:44:05,000
two update so it is enormous and

418
00:44:09,000 --> 00:44:11,000
uh you know my my lead at work sent me this to go through

419
00:44:15,000 --> 00:44:17,000
man it would take a whole day just to go through these release notes um so those like four things that they

420
00:44:22,000 --> 00:44:24,000
talked about in the video are kind of nice because I think those are probably what they feel are the highlights and what people want to know

421
00:44:29,000 --> 00:44:31,000
and then us poor developers who work in Unreal Engine have to come in here and

422
00:44:34,000 --> 00:44:36,000
look at all this uh look at all these chickens it's just a lot of it's just a

423
00:44:40,000 --> 00:44:42,000
lot of stuff and as an engine developer um you know if I was a gameplay

424
00:44:45,000 --> 00:44:47,000
developer I'd look at the gameplay stuff if I was UI developer I'd look at the UI stuff as an engine developer

425
00:44:51,000 --> 00:44:53,000
it's it's partly my job to to look through the whole dang thing because it's all engine stuff so

426
00:45:00,000 --> 00:45:02,000
I haven't finished going through all this uh but there's a lot of cool stuff uh I just kind of wanted to show you

427
00:45:07,000 --> 00:45:09,000
unreals release notes they are terrifying they are amazing they are

428
00:45:14,000 --> 00:45:16,000
well detailed and uh you know I respect them a lot for

429
00:45:20,000 --> 00:45:22,000
these gigantic uh change lists even for a simple like what you would consider a

430
00:45:26,000 --> 00:45:28,000
a minor update from 5.1 to 5.2 and the distance between five one and five two

431
00:45:31,000 --> 00:45:33,000
hasn't been that that long so I think there's some overlap where people are working on five two stuff well five one

432
00:45:37,000 --> 00:45:39,000
is getting finalized um it's the general like leapfrog development that you do with with large

433
00:45:43,000 --> 00:45:45,000
teams um but yeah there's there's kind of the the new stuff and unreal five two the

434
00:45:49,000 --> 00:45:51,000
highlights at least I would highly suggest go check out the changelog it's a little hard to find

435
00:45:55,000 --> 00:45:57,000
like I I searched for it and it didn't really um show up for me let me yeah it's probably because it's

436
00:46:02,000 --> 00:46:04,000
searched in the brave search rather than duck.com but if you just look for like five two

437
00:46:09,000 --> 00:46:11,000
Unreal Engine five two release notes um you should wind up with this site

438
00:46:17,000 --> 00:46:19,000
so anyways that's kind of all I've got for uh today

439
00:46:23,000 --> 00:46:25,000
I was it was exciting to look at all the new C plus plus stuff talk a lot about AI stuff uh very you know I don't as as

440
00:46:31,000 --> 00:46:33,000
a AI is in my job title it's one of the things I do uh so I have to stay up to

441
00:46:38,000 --> 00:46:40,000
date on it um but I don't like to go deep down the AI Rabbit Hole the modern you know machine learning

442
00:46:44,000 --> 00:46:46,000
you know artificial intelligence stuff I have done some things I I think one of

443
00:46:50,000 --> 00:46:52,000
the uh one of the things that I one of the things that I like to do is learn languages other than programming

444
00:46:56,000 --> 00:46:58,000
languages and so I created a I use chat GPT to I prompt it only speak in the

445
00:47:04,000 --> 00:47:06,000
language that I specify whether it's Chinese or Japanese or Spanish or whatever and so it only responds in that

446
00:47:12,000 --> 00:47:14,000
and then I take that input and I put it through

447
00:47:17,000 --> 00:47:19,000
Microsoft's artificial intelligence for text to voice and so you see this text

448
00:47:22,000 --> 00:47:24,000
come up you you hear a voice you hear it spoken to you click on it to make it speak again and then I use AI for

449
00:47:30,000 --> 00:47:32,000
translating the text to what it would be in English so that is that's my recent

450
00:47:36,000 --> 00:47:38,000
AI project that I've had a lot of fun with of course I'm not coding the AI I'm not super interested in in coding

451
00:47:44,000 --> 00:47:46,000
you know uh neural networks I've coded them before they're not hyper interesting I

452
00:47:51,000 --> 00:47:53,000
think majority AI is in the training and the data set and all that and that's a lot of stuff I don't want to deal with that's like data entry for me so

453
00:47:58,000 --> 00:47:60,000
not super interested but using it now that's that's where you get me when I can start combining things I can combine

454
00:48:04,000 --> 00:48:06,000
chat with audio with translations all that create a cool little app that I can use for myself it's not a don't ask me

455
00:48:11,000 --> 00:48:13,000
about it it's not public it's not public for people to use I don't want to go and spend a bunch of money to host a server

456
00:48:18,000 --> 00:48:20,000
to use these Services it's it's I set it up for me my wife my family members if

457
00:48:24,000 --> 00:48:26,000
you're interested in it I can maybe provide the code on a GitHub it's all

458
00:48:29,000 --> 00:48:31,000
JavaScript I don't uh oh there's a little bit of PHP it's

459
00:48:36,000 --> 00:48:38,000
like a little PHP script um I didn't use node.js for the back server I was just I wanted something

460
00:48:42,000 --> 00:48:44,000
very simple just throw in some PHP get it to print out the pages that sort of stuff and it's very ugly UI but if you're interested in it I can I probably

461
00:48:49,000 --> 00:48:51,000
put the code up on like GitHub and then you'll just put in your own API keys for

462
00:48:55,000 --> 00:48:57,000
um chat gbt uh Azure window Microsoft Azure and

463
00:49:01,000 --> 00:49:03,000
Google translate so um and then maybe you can use it yourself but let me know if you're

464
00:49:06,000 --> 00:49:08,000
interested in that I don't have it publicly available right now anyways thanks for watching and that's

465
00:49:11,000 --> 00:49:13,000
going to be it for today


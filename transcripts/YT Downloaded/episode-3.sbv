0:00:00.000,0:00:07.000
Welcome back! Today we're one step closer to Microsoft buying Blizzard. Some new C stuff,

0:00:07.000,0:00:13.520
I got a PHP note, we got, there's a lot of stuff about programmer health and some other

0:00:13.520,0:00:20.520
stuff to go over today. So, I guess the first big story that happened today was Microsoft

0:00:21.080,0:00:27.280
is one step closer to buying Blizzard. Of course this is all part of the industry consolidation

0:00:27.280,0:00:34.280
that everyone's talking about for the game industry. And it's part of, I think it's related

0:00:34.600,0:00:41.600
to something I mentioned before which is we have an issue where a lot of stuff, there's

0:00:41.600,0:00:47.640
just a lot of games being published out to Steam and app stores on both iOS and Android

0:00:47.640,0:00:54.040
and a lot now even on the Nintendo Switch which used to be a really walled off garden.

0:00:54.040,0:01:00.960
And with all that noise it's really hard for people to punch through it and become successful.

0:01:00.960,0:01:07.600
A lot of them have to go through YouTubers and YouTubers have a very specific show to

0:01:07.600,0:01:14.600
put on. So a lot of games are being kind of developed in a way that YouTubers can use

0:01:14.880,0:01:21.880
them to be funny or entertaining. And so we've got a lot of noise in that at respect. There's

0:01:21.880,0:01:27.680
a lot of games that are getting published with Unity Asset Store stuff. They just pull

0:01:27.680,0:01:33.040
some stuff off the Asset Store they pay a few bucks for, throw it all together, do some

0:01:33.040,0:01:38.480
very light coding and then they put out a game in less than a week. And sometimes they're

0:01:38.480,0:01:45.360
really successful on YouTube. There's a lot of channels out there constantly looking for

0:01:45.360,0:01:51.800
more content and games to play that are different and so that constant stream is really nice.

0:01:51.800,0:01:56.680
That being said, that makes for a lot of noise in the game industry. Lots and lots of noise

0:01:56.680,0:02:03.680
on all platforms. We have a lot of adult games coming out of nowhere. My wife complains a

0:02:04.280,0:02:08.920
lot about how many adult games she's getting on Steam even though she has so many filters

0:02:08.920,0:02:13.080
to block them. They keep coming through. I think it's kind of the joke now. Everybody

0:02:13.080,0:02:20.080
kind of sees that. So with all that madness, big companies, they have the money to push

0:02:20.080,0:02:24.880
their games, to push their products. They can market to millions of people. They have

0:02:24.880,0:02:31.320
hundreds of millions of dollars to put into marketing and research and influencer campaigns,

0:02:31.320,0:02:38.320
lots of influencer campaigns. A lot of streamers are paid to pay the games to promote them.

0:02:39.360,0:02:46.360
And sometimes, I don't know if the streamers even mention that they are paid to promote

0:02:46.400,0:02:49.880
them and if they do it's probably at the beginning of the stream and a lot of people aren't

0:02:49.880,0:02:53.920
there for that so they just think that the streamers playing this game that they really

0:02:53.920,0:02:59.360
just found and enjoyed when those streamers are paid a ton of money to stream. I know

0:02:59.360,0:03:03.200
this because I've worked with companies that do those kinds of campaigns. And they're a

0:03:03.200,0:03:09.240
valid marketing campaign because you can get a lot of people to play your game using this

0:03:09.240,0:03:11.680
technique.

0:03:11.680,0:03:17.280
So how does that relate to Microsoft buying Blizzard and consolidating of the game industry?

0:03:17.280,0:03:22.880
Well, like I said in some previous videos, these companies are able to spend millions

0:03:22.880,0:03:27.080
and millions of dollars to get eyeballs on their games, to buy their games and they make

0:03:27.080,0:03:32.520
tons of money. And all the little companies that can't compete with that wealth have a

0:03:32.520,0:03:36.800
very hard time even with really incredible games. There's a lot of incredible games that

0:03:36.800,0:03:43.800
just nobody ever hears of or that never can get completed because they can't get the funding.

0:03:43.800,0:03:49.680
So, these big companies get bigger. They spend a lot of money to make a lot of money and

0:03:49.680,0:03:55.880
then they spend that money to buy up all the other medium-sized businesses. I think every

0:03:55.880,0:04:01.200
company I've worked at for the last three companies, all three of them were purchased

0:04:01.200,0:04:07.360
by a much larger company and one of them got purchased twice by a large company. So, it's

0:04:07.360,0:04:11.280
a very real thing, the consolidation of all these companies.

0:04:11.280,0:04:18.280
So the European Commission has approved Microsoft's Blizzard purchase. Some other European country,

0:04:18.880,0:04:24.400
I don't know what it was, probably England or something, denied it. But there's, I don't

0:04:24.400,0:04:29.200
know how this works, but it still goes through and they're still going to be working towards

0:04:29.200,0:04:35.880
it. I am frankly a little bit ambivalent to big companies buying up other big companies

0:04:35.880,0:04:42.880
or big companies buying up medium-sized companies. It's a great way for developers, if they get

0:04:43.000,0:04:48.320
equity in a medium-sized company, it's a great way to get an extra paycheck. And it's kind

0:04:48.320,0:04:53.240
of just the way the system is, what can we do? We can't tell people to stop developing

0:04:53.240,0:04:58.640
indie games or we can't make them promise that they'll spend more than a week on an

0:04:58.640,0:05:05.640
indie game before they publish it to Steam or any other game store. So, just getting

0:05:06.360,0:05:12.760
past that noise is already a high bar. Even if you do a Kickstarter campaign, a lot of

0:05:12.760,0:05:17.800
the times your game has to be some kind of meme to just stand out and punch through all

0:05:17.800,0:05:22.640
that noise. And that can be frustrating for people who don't want to make meme games.

0:05:22.640,0:05:26.480
They want to make games that maybe tell a story that means something to them or make

0:05:26.480,0:05:33.480
a game that's a story for children or they want to make a game that's more puzzle-related

0:05:33.600,0:05:37.720
but there's no gimmick and it's just a bunch of series of different kinds of puzzles, that

0:05:37.720,0:05:42.160
sort of stuff. And those developers are basically developing games for themselves and their

0:05:42.160,0:05:49.160
friends because it's a hard market to compete with. Like I said, I'm ambivalent to big companies

0:05:49.700,0:05:54.820
buying up other big companies. I think the consolidation just happens. Maybe it'll lead

0:05:54.820,0:06:01.820
to some kind of tipping point where people get tired of it. Maybe developers will get

0:06:02.240,0:06:06.840
tired of making stuff. Of course, then we get into the whole AI stuff and then putting

0:06:06.840,0:06:13.840
AI into games for really quick and easy content. So, I don't know. It could be noisy forever.

0:06:14.200,0:06:18.720
Maybe we can band together, all of us game developers who spend a good quality amount

0:06:18.720,0:06:25.720
of time on our games. There's a lot of us. So, if we got together and bought and sold

0:06:25.920,0:06:32.920
each other's games and kind of collaborated in that way to create our own kind of group

0:06:33.180,0:06:37.160
marketing strategy in that way, maybe that's the way we can punch through with great game

0:06:37.160,0:06:44.160
ideas and stop leaving it just to the big guys to be able to get their games out there.

0:06:44.160,0:06:51.160
So, beyond this kind of business news, the next thing I want to talk about is C. C is

0:06:58.640,0:07:04.920
my favorite language. I love C++. I love C Sharp. I love JavaScript. Python I'm okay

0:07:04.920,0:07:11.920
with. I'm learning the Python variant in Godot. I've used Python for over a decade now. It's

0:07:16.280,0:07:20.280
not one of my favorites, but mainly because of the whole tabbing thing and spacing and

0:07:20.280,0:07:27.280
all that sort of stuff. But it's a lot different than it was back then. So, I give it some

0:07:27.280,0:07:34.280
credit. Anyways, back to C. We got some great news for some C people. GCC 13 now supports

0:07:35.600,0:07:42.600
C2X stuff. And some of the notable things that people like to point out is null pointer,

0:07:44.320,0:07:49.200
which comes from C++. That one I'm iffy about. It doesn't really matter to me. I'm fine with

0:07:49.200,0:07:55.000
null. This null pointer makes it a little bit more explicit, better compiler support,

0:07:55.000,0:08:00.480
that sort of stuff. It's not just a macro that evaluates to zero. So, that will allow

0:08:00.480,0:08:07.480
some better compiler checking for things like that. Enhanced enums. Oh, also for null pointer,

0:08:07.960,0:08:14.960
not only for compilers, but kind of, what are they called? Static analysis tools will

0:08:16.120,0:08:22.660
have, you know, they won't have to deal with evaluating macros by name to figure out what

0:08:22.660,0:08:27.280
the context is that people are doing. So, there are some benefits there for the static

0:08:27.280,0:08:34.280
analysis and the compilers. Enhanced enumerations. If you've used enum, you know that it evaluates

0:08:34.300,0:08:41.300
to an int. An int on a 16-bit system is going to be different than a 32. 32 and 64 are basically

0:08:43.200,0:08:50.200
the same. Int evaluates to 32 bits. But it's ambiguous, right? That's why we have stdint.h,

0:08:50.200,0:08:57.200
which allows us to use very specific sizes for our integers, like int32t, uint32t, and

0:09:00.880,0:09:07.880
all that sort of stuff. So, the enhanced enumerations, if I recall correctly, allow you to put a

0:09:07.920,0:09:13.000
colon and then put the size of the enum. You see this a lot, like in Unreal Engine, whenever

0:09:13.000,0:09:20.000
they're doing enums. It's not like in C++, the class enum stuff. This is just allowing

0:09:22.080,0:09:27.960
enums to be a little bit safer in that way and adhere to a proper ABI. Because if you

0:09:27.960,0:09:32.580
put an enum instead of a struct and then you compile it on two different systems, you can't

0:09:32.580,0:09:37.320
guarantee, or two different compilers even, you can't guarantee that you're going to wind

0:09:37.320,0:09:42.280
up with the exact same ABI, especially across the network, if you're talking to like some

0:09:42.280,0:09:49.280
super small embedded device. You want your ABI, especially in C, to be consistent. So,

0:09:50.960,0:09:56.760
enhanced enumerations will help a lot with that. Another thing that I think my friend,

0:09:56.760,0:10:03.140
a good friend of mine, he really, really wants from C++, which is the auto keyword. Now,

0:10:03.140,0:10:10.140
you may know that C++ hijacked the auto keyword. Auto comes from B, which comes before C. Dennis

0:10:10.140,0:10:17.140
Ritchie worked on, when he worked with B, he wanted, you know, C is supposed to be somewhat

0:10:17.580,0:10:22.420
backwards compatible. I don't know a whole lot about B, but the auto keyword came from

0:10:22.420,0:10:28.300
that. And it was for, I think, locally scoped variables or maybe something like that. And

0:10:28.300,0:10:32.660
it just got deprecated and unused over time. So, the auto keyword, you'll notice, is a

0:10:32.660,0:10:39.660
keyword in C. And now they're deciding, you know, bring auto in and detect types. Of course,

0:10:40.540,0:10:45.180
you really need that in C++ because some of those types with the namespaces and everything

0:10:45.180,0:10:52.180
else, the namespaces plus the long class names plus the, you know, the templating make, just,

0:10:52.180,0:10:59.180
just declaring the type of a variable alone takes up the full 80 columns. For people like

0:11:03.060,0:11:09.340
me who like to code in 80 columns, you know, you're going to wind up with like 120 minimum

0:11:09.340,0:11:15.580
just to define your variable, not even assign it. So, auto is super necessary, in my opinion,

0:11:15.580,0:11:21.980
for C++. Not as necessary in C, but is nice for when you just, you just want to auto it

0:11:21.980,0:11:26.660
in and you don't want to have to worry about it. I don't, I don't change type names that

0:11:26.660,0:11:32.380
often. If I do, I use a refactoring tool. So, not crazy. I'm not like banging down the

0:11:32.380,0:11:39.140
door to get auto in. Another one is const expression. Now, I know you C++ guys, you

0:11:39.140,0:11:43.680
know what const expressions are. They're a great tool for the compiler. We are not talking

0:11:43.680,0:11:48.140
about the same const expression. This is like a lightweight version of const expression,

0:11:48.140,0:11:52.760
which does allow some compile time stuff. It's been months since I read the spec on

0:11:52.760,0:11:59.100
const expression for C, so I don't recall it all off the top of my head, but go check

0:11:59.100,0:12:05.900
it out. It's kind of like a nice little addition. Again, C is supposed to be lightweight, and

0:12:05.900,0:12:10.340
I can take or leave any of these. I can code in C99, but I do like to stay up to date in

0:12:10.340,0:12:16.820
C and mess around with like the generic macro or, you know, some of the modern atomic stuff

0:12:16.820,0:12:24.700
and things like that. It is nice to stay kind of up to date with computers and just what

0:12:24.700,0:12:31.540
CPUs and all the CPUs and GPUs are doing these days. So, it's good to stay up to date. That's

0:12:31.540,0:12:38.420
what's happening in C land. Now, I'm going to take a second to talk about PHP for you

0:12:38.420,0:12:44.400
web people who still use PHP. I don't, I love PHP because it's so simple. I use Node.js

0:12:44.400,0:12:49.220
for websites too. I use things like Firebase for a random website every now and then to

0:12:49.220,0:12:57.020
throw it up. You know, I, but I do love PHP because it's very flat, straightforward, simple,

0:12:57.020,0:13:02.340
and it's well supported on basically everything. Like, coding on Windows is pretty easy, debugging

0:13:02.340,0:13:07.180
in all Windows and all that, at least since I've been doing it for a while. Maybe I'm

0:13:07.180,0:13:13.620
cheating because I've used it for many years. But PHP 8 came out a while ago, and now I

0:13:13.620,0:13:21.020
have a little bit of a rant for people who are using PHP and not using PHP 8. I love PHP,

0:13:21.020,0:13:26.300
and I love the flexibility of it, so I get it. You want to use kind of the old tried

0:13:26.300,0:13:36.300
and true, but please try out PHP 8, and especially try out the, what are they called, type names.

0:13:36.300,0:13:44.900
Being able to type name and kind of strongly type your PHP is very nice. And it's great

0:13:44.900,0:13:50.460
because it's not all or nothing. You can use some strong types, or you should use strong

0:13:50.460,0:13:57.100
types in many places where you know what the type is going to be. And then you can just

0:13:57.100,0:14:01.220
not use strong types in places that you want to deal with, you know, strings or network

0:14:01.220,0:14:07.420
requests or things coming from the client or going to the client or just arbitrary data,

0:14:07.420,0:14:15.340
like collections or an array of, you know, if you want to make an array with mixed data

0:14:15.340,0:14:24.420
types inside of them, that's completely fine. But try out PHP 8 and do use the type name

0:14:24.420,0:14:33.500
syntax. The reason I bring this up is because I don't see, I continue to see PHP being used

0:14:33.500,0:14:39.900
in the modern era, and all of them are like, I've even seen stuff on PHP 5, which I used

0:14:39.900,0:14:49.300
like a decade ago. So PHP 7 is pretty popular, but try out PHP 8, get up to date, it's faster.

0:14:49.300,0:14:54.820
Type safety, whenever you add type names, you automatically get some magical speed up

0:14:54.820,0:15:00.860
in your code just because it's known. Anytime you have something known, your code's going

0:15:00.860,0:15:09.940
to go faster. This is why native code, like C and C++, are so fast, other than them not

0:15:09.940,0:15:16.820
having garbage collectors or being interpreted. Everything, you try to make everything known,

0:15:16.820,0:15:21.580
like you duplicate functions, that's what templates do, they just duplicate the functions

0:15:21.580,0:15:25.380
for different types, and everything is just statically known. And so it can be really

0:15:25.380,0:15:30.100
fast because it knows what it's doing, it knows the size of variables that are going

0:15:30.100,0:15:38.020
inside of functions, it doesn't have to dynamically allocate the stack. So just a little aside.

0:15:38.020,0:15:42.900
In assembly, whenever you compile C or C++, there's a thing called a shadow stack, and

0:15:42.900,0:15:47.860
there's also home space. This is a space when you call a function, it has to allocate, it

0:15:47.860,0:15:53.060
uses some registers for the first few arguments, but then it has to allocate the stack, some

0:15:53.060,0:15:57.940
memory on the stack to be able to know the size of the arguments going in. If the size

0:15:57.940,0:16:02.340
is arbitrary and jumping around all the time, it's going to have to determine the size before

0:16:02.340,0:16:09.540
it can allocate that stack space, or it's going to over-allocate the stack space just

0:16:09.540,0:16:19.780
to support some unknown type. So, yeah, type safety is also good. Just FYI, for all of

0:16:19.780,0:16:28.660
you PHP programmers out there, give it a try, I promise you'll love it. I love it. I still

0:16:28.660,0:16:34.780
keep the flexibility and simplicity of PHP, I can write a whole routing, I can write an

0:16:34.780,0:16:42.660
entire router for a request that comes in, I can take the URL and figure out which, like,

0:16:42.660,0:16:51.460
get or post request or even to return some content with. In less than 30 lines of code,

0:16:51.460,0:16:58.420
I can write a PHP router. And that's using all the PHP stuff. So give it a try.

0:16:58.420,0:17:05.780
The next thing that I want to talk about is programmers' mental health. I saw a lot of

0:17:05.780,0:17:12.820
news articles recently about programmers with mental health, not issues, but like they're

0:17:12.820,0:17:17.380
burnt out or, you know, they stopped coding for a while and they're coming back or they

0:17:17.380,0:17:24.060
just, you know, they can't seem to keep a job or get a job, the job market's hard right

0:17:24.060,0:17:30.180
now. I'm not looking for a job, so I don't know about it. I know there's been tons and

0:17:30.180,0:17:36.380
tons of layoffs recently. I don't know how many of those are programmers, but I'm certain

0:17:36.380,0:17:41.180
there's got to be quite a few programmers within there. And probably a lot of web programmers,

0:17:41.180,0:17:48.860
and just because I think they got overstaffed during, you know, the stuff that went on in

0:17:48.860,0:17:56.620
2020, 2019, all that stuff. So they kind of overstaffed and, you know, now it's hard to

0:17:56.620,0:18:03.420
find work apparently for some people. Yeah, if you're getting burnt out from programming,

0:18:03.420,0:18:10.420
I don't know what to tell you, take a break, I don't know. Maybe you're not coding what

0:18:10.420,0:18:21.520
you love coding. I have coded almost nonstop, no breaks, for nearly 15 years. Hours and

0:18:21.520,0:18:28.380
hours a day, every day. I still have a wife, I still have kids, I still have a job, I still

0:18:28.380,0:18:34.220
do random stuff on the side like this thing, and, you know, I still code. I love code.

0:18:34.220,0:18:38.060
I sit here and read articles about code. So if you're getting burned out, maybe you're

0:18:38.060,0:18:46.180
not focusing on what matters most to you. Maybe you're chasing after trends. Maybe you're,

0:18:46.180,0:18:51.860
you know, not, you're trying too hard to complete projects that you're not interested anymore.

0:18:51.860,0:18:59.620
I think the key to my success in continuing to code and not get burned out is that I just,

0:18:59.620,0:19:05.020
whenever I finish coding a part of some big grand idea that I've had, I just quit programming

0:19:05.020,0:19:10.420
and I'm done and I move on to something else. It's not that important to finish the project.

0:19:10.420,0:19:13.340
And you know what, you don't always have to be the guy. You don't have to go make a million

0:19:13.340,0:19:18.900
dollars, you don't have to be super, you know, you don't have to make some super cool project

0:19:18.900,0:19:22.140
that everyone uses or anything like that. You don't have to be the guy. Give yourself

0:19:22.140,0:19:28.500
some slack, have fun. Coding is fun. Most of it is creative and playing around with

0:19:28.500,0:19:33.180
different ideas. It's all just a game. It's a puzzle that you play around with and have

0:19:33.180,0:19:39.420
fun with. And that's the key. And that's also why I've programmed in so many languages,

0:19:39.420,0:19:44.660
I've dealt with so many different technologies and also programmed stuff for like Game Boy

0:19:44.660,0:19:50.740
and I've tried out and learned four different assembly languages. I just have fun. It's

0:19:50.740,0:19:55.600
just a puzzle to me. So don't burn yourself out. If you're getting burned out, it's probably

0:19:55.600,0:20:06.420
because you're doing something you don't want to do. This guy here, I'm not going to show

0:20:06.420,0:20:11.620
it, I don't want to point out anybody specific, but he's saying that he's having a hard time

0:20:11.620,0:20:19.740
with the job market. But he seems really like blase, super chill and like, you know, get

0:20:19.740,0:20:27.780
coffee and chill, sip on some tea. It looks like he mentioned, the only reason I know

0:20:27.780,0:20:32.140
he's a coder is because he mentioned it. There's like a one sentence where it was mentioned

0:20:32.140,0:20:39.580
in this whole thing. So maybe if you talk more about code and update your LinkedIn,

0:20:39.580,0:20:43.820
do some things like that. I'm not too fond of his advice. His advice is just like, if

0:20:43.820,0:20:50.260
you're doing front end, do back end. If you're like, I don't know, stuff about self care

0:20:50.260,0:20:54.500
and stuff like that. Look, if you want a job in code and programming, I'll tell you the

0:20:54.500,0:21:00.560
secret. Program a lot. Impress people. Do some math for fun. Make a whole bunch of websites.

0:21:00.560,0:21:06.220
Make some games. Update your LinkedIn. Recruiters are always looking on LinkedIn. Put a whole

0:21:06.220,0:21:10.540
bunch of keywords of everything you've done. So you'll see in the first episode of the

0:21:10.540,0:21:15.860
podcast where I read off a bunch of stuff that I have messed with, that list and more

0:21:15.860,0:21:21.540
is on my LinkedIn. And I'm, you know, recruiters. They look up these keywords and that's how

0:21:21.540,0:21:25.740
they find people. So update your LinkedIn, put in all the keywords of the stuff that

0:21:25.740,0:21:30.620
you know how to do because you will be tested on them. If you go for a job interview, don't

0:21:30.620,0:21:37.620
waste anybody's time not knowing how to do something. That being said, my first job,

0:21:37.620,0:21:42.700
when I barely started coding in PHP, I BSed it and said I knew exactly what I was doing.

0:21:42.700,0:21:46.820
And the guy, the owner had me come out to the back and he's like, look, here's my problem

0:21:46.820,0:21:52.180
with the code. And he left me with it. And I had to figure it out in 30 minutes. And

0:21:52.180,0:21:56.460
it was just a, it was a serious problem I had with their company. And this was a small

0:21:56.460,0:22:01.420
company and I figured it out in 30 minutes and I blew my own mind. And he was, he hired

0:22:01.420,0:22:06.060
me on the spot because he was so excited that I solved it. So sometimes that scenario can

0:22:06.060,0:22:12.180
work, but don't rely on it. Don't take my advice on that.

0:22:12.180,0:22:20.380
There's been also one other thing related to health and programming is people have been

0:22:20.380,0:22:26.180
talking about software development ethics. Now I have a very specific view on ethics

0:22:26.180,0:22:32.620
in programming. If it's a game and it doesn't hurt anybody and you don't steal anybody's

0:22:32.620,0:22:38.340
stuff and you don't take their money and all this sort of stuff. You know, if you, if you're,

0:22:38.340,0:22:45.660
if you buy a product and you own it, for example, like if you buy a game, a modern game even,

0:22:45.660,0:22:50.100
and you tear it apart to figure out what's going on inside of it and you learn their

0:22:50.100,0:22:56.380
company secrets that way, that's fine. In my opinion, that's you exploring and researching.

0:22:56.380,0:23:02.600
That's not the ethics I'm talking about here. I think their ethics is more about their focus

0:23:02.600,0:23:10.780
is kind of on artificial intelligence and it talks about, you know, using AI to steal

0:23:10.780,0:23:16.220
stuff or scam people and all that sort of stuff. I don't think, I don't think we're

0:23:16.220,0:23:24.420
going to change anybody's mind on programming ethics. You're just going to code the way

0:23:24.420,0:23:31.060
that you code. If you're going to get more ethical in programming, you need to be more

0:23:31.060,0:23:38.620
ethical as a person. I don't mean to make this less technical of a talk, but the problem

0:23:38.620,0:23:47.060
is at the source. You know, that's the same truth in code as it is with people. So if

0:23:47.060,0:23:52.940
you find that you're talking to somebody or know somebody that has, you know, they're

0:23:52.940,0:23:57.820
doing nasty things and stealing people's info and trying to scam them, you're not going

0:23:57.820,0:24:02.380
to, you're not going to change their mind by writing a blog post about programming ethics

0:24:02.380,0:24:07.260
and trying to get out there and teach programming ethics to groups of people. I've seen it on

0:24:07.260,0:24:12.700
LinkedIn. I've seen it in blog posts. I've seen it kind of, it's like, I don't know if

0:24:12.700,0:24:17.540
people are just trying to become speakers at some kind of event or something, but ethics

0:24:17.540,0:24:23.100
are at the source and the people have to change their own internal ethics. They have to be

0:24:23.100,0:24:26.820
willing not to steal from people. They have to be willing not to lie. They have to be

0:24:26.820,0:24:33.060
willing to have integrity and not run up the clock for their employer doing nothing. A

0:24:33.060,0:24:39.380
lot of programmers don't do as much as they should when they're at work or when they're

0:24:39.380,0:24:46.900
on teams. I have a little story about when I was in college. There was this, I would

0:24:46.900,0:24:52.580
always be on teams in college and I was the one, even though I went to school for animation,

0:24:52.580,0:24:57.460
I was the one who was doing the code stuff and I wound up doing all the code. And the

0:24:57.460,0:25:05.060
coders just didn't, they didn't do their work. Of course, I was a coder at the same time

0:25:05.060,0:25:12.180
because I was more focused on code at that point. But I wound up doing all the work and

0:25:12.180,0:25:16.860
they didn't do anything. And that's not their own software development ethics, that's their

0:25:16.860,0:25:21.700
own personal ethics. They were more interested, one of them was more interested in looking

0:25:21.700,0:25:29.540
at OpenGL and making a cube move or something. That's just people ethics. You can't preach

0:25:29.540,0:25:34.940
software ethics to people. If you want to preach ethics, you've got to preach people

0:25:34.940,0:25:41.980
ethics. Treat people nicely. Don't steal. Don't steal from your employer. Don't steal

0:25:41.980,0:25:46.620
their time. Don't steal their money. Don't steal from others. Respect others. All these

0:25:46.620,0:25:57.220
things, this isn't a podcast about morals, but you need to preach morals to people, not

0:25:57.220,0:26:03.940
software ethic. So please don't go to any of these software ethics talks. I don't know

0:26:03.940,0:26:13.380
what they really have to talk about. So yeah, that's kind of the mental health aspect of

0:26:13.380,0:26:23.740
today's thing. And yeah, I just noticed there was a burst in all these, I mean, it seems

0:26:23.740,0:26:32.020
to be constant ever since 2019. Lots of mental health and kind of existential crises with

0:26:32.020,0:26:38.340
programmers. I don't know why programmers have this. You know, I feel like I've been

0:26:38.340,0:26:45.500
playing a game for 15 years. So I haven't really felt this, but all I can say is what

0:26:45.500,0:26:48.300
I've done, and hopefully that helps somebody out there.

0:26:48.300,0:27:01.660
So I want to talk about now Google. Google is one of those, they're not part of ICANN,

0:27:01.660,0:27:08.660
I don't think. ICANN, the domain name, I don't know what to call them, the domain name consortium

0:27:08.660,0:27:13.840
or something like that. But they are kind of, they are associated to it, which means

0:27:13.840,0:27:19.340
they can come up with domain names. And one of the things that they decided to come up

0:27:19.340,0:27:26.940
with, here I've even got the site here to show you. One of the things that they came

0:27:26.940,0:27:38.700
up with is, here's the new domain names. Let me zoom in on this. Okay,.foo. Okay, I feel

0:27:38.700,0:27:44.820
like that's some kind of programming joke maybe. Okay, that's fine. Let's see, what

0:27:44.820,0:27:58.560
else? We've got.zip. Now, the eagle-eyed viewer out there will know that.zip is probably

0:27:58.560,0:28:05.760
not a good idea for a domain extension. What are they called? Top level domain name or

0:28:05.760,0:28:10.500
something like that, TLDN or something..zip is probably not a good idea. You probably

0:28:10.500,0:28:15.420
shouldn't use super well-known extensions for your domain names. And now, this is the

0:28:15.420,0:28:21.800
goofy part. Zip, this is their definition. This is what they told ICANN. And these are

0:28:21.800,0:28:27.740
approved, I believe. Please note that the launch schedule for this is, this TLD has

0:28:27.740,0:28:32.720
been modified since being announced. The schedule is published below and has been updated and

0:28:32.720,0:28:42.160
approved by ICANN. Zip is a secure domain name for typing, for tying things together

0:28:42.160,0:28:49.300
or moving really fast. Hosting content on a.zip domain means speed. This is kind of

0:28:49.300,0:28:59.260
like zip and zippies, zip, zip, zip, zip. So, maybe they didn't realize that's also

0:28:59.260,0:29:04.860
for the compressed file type. I feel like that's just problems waiting to happen. Like

0:29:04.860,0:29:12.000
who, first of all, I would never make a domain name unless it's a joke as a.zip because

0:29:12.000,0:29:17.200
you'll probably be put on all the spam lists and no one will probably click your link.

0:29:17.200,0:29:21.260
They'll think that you're scamming them with a zip file. That's already one problem. And

0:29:21.260,0:29:28.940
good on them too because I can tell you that.zip domains will probably be used to scam

0:29:28.940,0:29:36.900
people a lot. You know, freemusic.zip and it'll download a zip file when you go to

0:29:36.900,0:29:43.380
it. And then of course the kids or whoever is downloading this will then get a virus

0:29:43.380,0:29:51.500
because they went to this.zip domain. And I know it's not any different than freemusic.com

0:29:51.500,0:30:00.380
slash zip or slash whatever or freemusic.com and they get a zip file sent to you. But if

0:30:00.380,0:30:06.540
something downloads when you go to a website, you are probably questioning it. Even a kid

0:30:06.540,0:30:10.680
would be like, I didn't click on anything. But if you go to a.zip domain and it downloads

0:30:10.680,0:30:16.280
something that's a zip file, you probably won't question it as much. I'm just saying.

0:30:16.280,0:30:23.980
The other one is.mov. Let's see, this is a secure domain for moving pictures and other

0:30:23.980,0:30:30.580
things that move. For anything that moves you,.move is the perfect domain. This is

0:30:30.580,0:30:41.100
also a famous file extension. And if you download a.mov file by going to, I don't know, pocahontas.mov

0:30:41.100,0:30:47.420
and it downloads a movie called Pocahontas and it's not really a movie file, it's something

0:30:47.420,0:30:56.900
else, then you have another problem. I love.dad though..dad is a secure domain for

0:30:56.900,0:31:05.140
dads. And I'm a dad. I can get behind.dad. That's awesome. So I can't get behind.zip.mov,

0:31:05.140,0:31:16.480
but I can get behind.dad..phd,.professor. Hopefully these show off your teaching credentials.

0:31:16.480,0:31:22.540
Hopefully these are locked. I don't know if any of these are locked. Like.edu and.gov

0:31:22.540,0:31:27.620
are locked. You can't get them as an individual. You have to prove that you're an educational

0:31:27.620,0:31:33.620
institution for.edu and you have to prove you're a government entity for.gov. And that's

0:31:33.620,0:31:39.980
why those are successful and you can use a.edu for getting discounts and stuff is because

0:31:39.980,0:31:44.660
they can trust that those are locked. I don't know if PhD and professor are locked, nor

0:31:44.660,0:31:56.100
do I care. I don't think certain people in society should just get special, like individuals

0:31:56.100,0:32:02.260
get special privileges for domain extensions. That seems a little weird. Especially when

0:32:02.260,0:32:11.380
there's a lot of people with PhDs that study weird things and they have a PhD or they study

0:32:11.380,0:32:14.860
one thing and then they start preaching about another and say they're a doctor. We have

0:32:14.860,0:32:22.980
a lot of those on the internet. My wife shows me a bunch of them. Just these people masquerading

0:32:22.980,0:32:28.900
as actual scientists or whatever and they're not. So these are a little weird. I can see

0:32:28.900,0:32:35.860
these scamming people. I can see these scamming people with kind of just falsified stuff.

0:32:35.860,0:32:42.220
And even so, there are a lot of doctors and PhD people out there that kind of, they don't

0:32:42.220,0:32:46.140
have time to do the research. Let's say they're a doctor and they're a surgeon. They don't

0:32:46.140,0:32:54.820
have time to research some other field of medical science. So they rely on others. And

0:32:54.820,0:33:01.700
so if someone sent them, if they trust someone and that person's email got hacked and they

0:33:01.700,0:33:05.740
sent them a fake thing and then this other person started propagating it, we shouldn't

0:33:05.740,0:33:15.340
have like authority domains outside of.gov. So I don't know what ESQ is. I think we show

0:33:15.340,0:33:26.460
you are a bar admissions, Lamar work experience lawyer. Okay. Yeah. So I'm not super down

0:33:26.460,0:33:30.900
on lockdown domains outside of edu and gov. I think those were two good choices and the

0:33:30.900,0:33:36.540
only two that I think should exist. Dot dad. That's the one that wins it. I bet you I can

0:33:36.540,0:33:40.500
saw this list and all they saw was dot dad and it's like, yeah, whatever. I just let

0:33:40.500,0:33:48.260
it go. We're getting dot dad there. Oh, Nexus. I skipped that one. It's like a hub. Interesting.

0:33:48.260,0:33:52.540
Yeah. Zip and MOV are the ones I wanted to complain about and I have complained about

0:33:52.540,0:34:09.420
them. So let's move on. So another topic that I've seen fairly recently is, I mean, it's,

0:34:09.420,0:34:16.060
I've seen it recently, but I've seen it essentially the whole time I've done web development and

0:34:16.060,0:34:21.220
that's people trying to figure out what database to use. Now, a lot of these sites are going

0:34:21.220,0:34:27.100
to be one versus the other. So like graph database versus a relational database or a

0:34:27.100,0:34:32.960
no SQL database versus a SQL database. I don't often see vertical databases in here or anything

0:34:32.960,0:34:41.500
like that. So our memory cache databases, although my SQL has memory cache, it has,

0:34:41.500,0:34:49.780
you can set it up to have memory cache as a storage mechanism. So anyways, the debate

0:34:49.780,0:34:57.180
on which database to use, really you should be using many different databases for the

0:34:57.180,0:35:03.820
different parts of your program that does different things with data. So you'll use,

0:35:03.820,0:35:09.100
I think it's a, you'll use like a Redis for a leaderboard so that you can quickly sort

0:35:09.100,0:35:16.500
and select things. You'll use a MySQL for long term concrete storage. You don't want

0:35:16.500,0:35:23.940
messed up like accounts and no keeping track of very sensitive data like that. You'll use

0:35:23.940,0:35:34.500
no SQL databases for game data and quick storage of save data or like where enemies kind of,

0:35:34.500,0:35:38.020
I don't know if you have like timetables or something and you can put those in there.

0:35:38.020,0:35:44.460
Just kind of transient data that's not so important that's okay to refill. And you'll

0:35:44.460,0:35:52.180
use, you know, cache databases for very quick lookups. If especially this is you, you normally

0:35:52.180,0:36:00.020
front cache like a MySQL relational database. You front cache it so that you can, if something's

0:36:00.020,0:36:08.020
requested a lot from those structured databases, you can get to that information very quickly.

0:36:08.020,0:36:13.980
Another one is, what did I mention, the graph database. So a graph database is great for

0:36:13.980,0:36:20.060
data that is highly intertwined. Think friend graphs, I think we've all seen that. So you

0:36:20.060,0:36:26.740
have a lot of, you know, data that's connected to, that's interconnected and it can have

0:36:26.740,0:36:33.900
some blobs of information, you know, like account name and login date and, you know,

0:36:33.900,0:36:38.580
friends and the friends is the graph or something like that. So use a graph for that kind of

0:36:38.580,0:36:45.700
data. So what I'm getting at is stop arguing over database types. Use them all. They all

0:36:45.700,0:36:50.260
have a specific purpose for specific things. There's not one that's going to be a magic

0:36:50.260,0:36:55.580
bullet and there's not one that's going to solve all your problems. I know that if you

0:36:55.580,0:37:02.300
use things like Firebase or whatever, they may only support a couple variants of databases,

0:37:02.300,0:37:09.200
which is bad, but it does help with those types of like live apps or whatever. You should

0:37:09.200,0:37:15.980
use the database that you need for the time you need it. Cool. You know, key value stores

0:37:15.980,0:37:22.100
also. I know that NoSQL is often a key value store, but you can also just have a flat like

0:37:22.100,0:37:28.420
key and value, whether it's a blob of binary data or whatever. So just pick the database

0:37:28.420,0:37:35.380
that works for the task, not the program, not the whole app, for the task and you'll

0:37:35.380,0:37:39.820
be happy. That's one of the downsides of web development. If you're a web developer, you've

0:37:39.820,0:37:44.940
got to use different technologies all the time from the language to the stack to the

0:37:44.940,0:37:53.660
operating system to the web browser size, whether it's a phone or a desktop window or

0:37:53.660,0:37:58.500
if it's a database, it doesn't matter. You're using different tech all the time. It's the

0:37:58.500,0:38:06.980
curse of the job. So that's my view on all the arguments I constantly see over the years

0:38:06.980,0:38:13.240
of database selection. So don't fall into which database is better. Use the database

0:38:13.240,0:38:18.940
that works for the specific type of data. It is not unreasonable to use all the databases

0:38:18.940,0:38:28.900
because you need all those different types of data. And now I can't go on to the fun

0:38:28.900,0:38:34.540
stuff without talking about artificial intelligence. It's all in the news, so of course there's

0:38:34.540,0:38:41.340
a lot of news for it. Google has, you know, they had Google I.O. just recently. That's

0:38:41.340,0:38:54.100
the developer conference for Google. However, it's also part them trying to please the investors

0:38:54.100,0:39:01.160
and also consumers because a lot of people who are watching Google I.O. have never programmed

0:39:01.160,0:39:05.400
in their life because they wanted to see the pixel fold. I'm not here to talk about the

0:39:05.400,0:39:12.840
pixel fold. I'm here to talk about the goofiness of responsible AI. All these people are praising

0:39:12.840,0:39:18.020
this responsible AI, and I think that it's, you know, it's good to have responsible AI.

0:39:18.020,0:39:22.700
However, putting some metadata on a photo and embedding some data into a photo is not

0:39:22.700,0:39:33.020
responsible AI. Responsible AI comes from the source, not the output. So I know that

0:39:33.020,0:39:37.060
this is kind of one of the hot arguments on art and that sort of stuff. I'm not here to

0:39:37.060,0:39:42.460
talk about artificial intelligence, reading people's art and stealing it or anything like

0:39:42.460,0:39:49.940
that. I have no strong opinions on that. I love AI, and I also love art, and I want to

0:39:49.940,0:40:00.740
see both of them flourish. So one of the things that felt goofy to me was the responsible

0:40:00.740,0:40:06.460
AI stuff. And if you know the, if you're in the United States, you may know that all the

0:40:06.460,0:40:11.420
tech leaders except Elon Musk went to the White House to talk about artificial intelligence

0:40:11.420,0:40:16.140
and responsible artificial intelligence. So you had like Satya Nadella from Microsoft,

0:40:16.140,0:40:22.580
you had whoever was from Google. I think the CEOs left and came back. I can't remember

0:40:22.580,0:40:26.860
the names very well. And then of course all the other places, probably OpenAI and all

0:40:26.860,0:40:35.620
that. It was a room full of, you know, tech people and the president. So they had this

0:40:35.620,0:40:42.220
whole meetup about responsible AI. And what does responsible AI mean? Now, it's always

0:40:42.220,0:40:48.220
kind of goofy to have corporations and CEOs who are beholden to their shareholders in

0:40:48.220,0:40:57.060
those kinds of meetings to talk about their responsibilities to the human race at large.

0:40:57.060,0:41:02.140
But you know, it is a good thing that they talk about it. And of course, they get warnings

0:41:02.140,0:41:12.900
and say, hey, we're going to regulate this thing, probably. So stay in line. Anyways,

0:41:12.900,0:41:19.300
the one thing that irked me about the AI thing, Google I O was their big push on detecting

0:41:19.300,0:41:25.340
AI generated images. The image thing really got me because first of all, metadata, they're

0:41:25.340,0:41:29.820
going to put metadata inside of images. That's fantastic because you know what, whenever

0:41:29.820,0:41:37.060
you upload an image to any website worth their weight in salt, salt, sugar, worth their weight

0:41:37.060,0:41:46.340
in gold, they strip meta tags. So meta is useless. It just gets discarded by all companies

0:41:46.340,0:41:50.740
because well, first they read it, they read it for themselves. They want to get your GPS

0:41:50.740,0:41:57.140
location, all that stuff that's in your photo. By the way, turn off GPS on your photos. Nobody

0:41:57.140,0:42:07.700
uses the photos, where was I GPS thing on your phone. You're just giving people your

0:42:07.700,0:42:13.060
position all the time. It's kind of strange. And who knows who can get access to that.

0:42:13.060,0:42:17.380
But anyways, before they take that photo and send it off and propagate it to everybody,

0:42:17.380,0:42:21.840
they completely strip meta tags just so that it does protect your personal information

0:42:21.840,0:42:26.700
because photos, the meta for photos can have a lot of stuff in there that shouldn't. And

0:42:26.700,0:42:32.100
also if you're a web developer, strip the meta. Do not just take people's photos and

0:42:32.100,0:42:38.820
host them. Strip the meta. There's tons, you can just take a photo. If you're doing Node.js

0:42:38.820,0:42:42.820
for example, there's a library where you just take the photo and when it takes the photo

0:42:42.820,0:42:49.460
you can have it as part of one of the arguments to just strip the meta. And if you don't know

0:42:49.460,0:42:54.260
how to do meta stripping or anything like that, the easiest way to do it if you're kind

0:42:54.260,0:43:01.260
of new to coding or you're not well versed on how to access the metadata on a file, if

0:43:01.260,0:43:06.140
you take the photo and then use like magics or whatever it's called, just any kind of

0:43:06.140,0:43:11.780
image library and just crop it by like a, you don't even, I don't even think you have

0:43:11.780,0:43:16.820
to change it at all, but you probably should just so that you know that it's working. Just

0:43:16.820,0:43:24.380
like crop it or change something about it using the photo editing software or photo

0:43:24.380,0:43:29.660
editing library and then save it. And that just strips the meta automatically because

0:43:29.660,0:43:33.700
it's saving a new image. So strip the meta inside of the photos and videos please. Do

0:43:33.700,0:43:40.940
not, do not, do not read it, do not take it, do not sell it, do not redistribute it. Strip

0:43:40.940,0:43:49.140
the meta. So the second thing is, and this is probably the more clever one, but not exactly

0:43:49.140,0:43:54.460
perfect. That's where you can encode data inside of an image without changing how the

0:43:54.460,0:44:01.500
image looks. So you can inject data that's not metadata, you know, like, you know, into

0:44:01.500,0:44:07.460
the interlaced into the pixels or interlaced into the header or anything like that of the

0:44:07.460,0:44:15.940
file. Now that's obviously not something that gets stripped very easily, but if you open

0:44:15.940,0:44:20.700
that photo inside of a photo editor and save it, that's just going to be gone. It's not

0:44:20.700,0:44:24.620
encoded in the pixels. I mean, even if it is encoded in the pixels, it's just going

0:44:24.620,0:44:29.380
to resave the pixels in a new way when you export from a photo program. So it's like

0:44:29.380,0:44:33.540
the easiest thing to get rid of. So even if you use that library example where you just

0:44:33.540,0:44:38.380
take it and crop it or whatever and then save it again, that little encoded data that was

0:44:38.380,0:44:43.420
in there is now gone because it got resaved maybe as a different format or a format that

0:44:43.420,0:44:50.020
doesn't support interlaced data inside of the pixels. So that's my rant on that. That

0:44:50.020,0:44:56.060
was just lip service. The photos stuff, just pure lip service by Google on trying to make

0:44:56.060,0:45:00.540
people think that they're thinking about ethical AI. In fact, in my opinion, that's a complete

0:45:00.540,0:45:06.980
waste of money. You shouldn't be putting, you know, in fact, that doesn't even cost

0:45:06.980,0:45:11.620
them that much money to put that in, you know, on the output of the image. Instead of investing

0:45:11.620,0:45:17.580
money in ethical AI output and the file that gets outputted, you need to invest ethical

0:45:17.580,0:45:23.780
AI in the input, how you train the system, what you do with the system. That's ethical.

0:45:23.780,0:45:32.260
It's two different arguments. So don't believe the hype on when people talk about encoding

0:45:32.260,0:45:40.420
will tell you if it's a AI inside of the image or AI generated in the image. It's nonsense.

0:45:40.420,0:45:45.060
Invest in a service where I can upload a picture to Google and it has a memory of all the photos

0:45:45.060,0:45:50.700
it generated so it can tell me if that photo was generated by AI. That right there doesn't

0:45:50.700,0:45:56.540
need metadata. It doesn't need to put little tags inside of the binary. That just me send

0:45:56.540,0:46:02.540
you it and you tell me whether it is. Just do that. That's probably way more useful.

0:46:02.540,0:46:08.740
And then just make that an API I can call. So I guess that was kind of a rant on ethical

0:46:08.740,0:46:16.420
AI. I'm going to talk about some fun stuff now. I've seen in like programming humor stuff,

0:46:16.420,0:46:22.820
a lot of people are fighting over text editors. This is funny to me because we have people

0:46:22.820,0:46:29.660
saying I use notepad. Of course we all use notepad to do some code. But they're all ragging

0:46:29.660,0:46:34.340
on Visual Studio Code. I don't know why. Probably because Visual Studio Code came out and it

0:46:34.340,0:46:38.820
became really popular because it's Node.js, you can host it in the web, it has all kinds

0:46:38.820,0:46:45.060
of easy plugins, you can use web technology to write your plugins. And I've written like

0:46:45.060,0:46:52.620
language servers and stuff like that for Visual Studio Code. It's nice. But you have all kinds

0:46:52.620,0:47:01.020
of people talking about notepad or atom or my text editor runs inside of a terminal.

0:47:01.020,0:47:06.980
Visual Studio Code doesn't. My text editor runs a web page within it and all this other

0:47:06.980,0:47:14.700
stuff. So that's a lot of fun. Go into programming humor and please post some more text editor

0:47:14.700,0:47:22.180
jokes because I love them. They're funny to me. I think nobody's taking it seriously.

0:47:22.180,0:47:27.380
Of course there are people out there that are diards on their text editors. I can use

0:47:27.380,0:47:31.140
anything. I can use notepad, I use C-Line, I use Visual Studio, I use Visual Studio Code,

0:47:31.140,0:47:41.100
I use Nano, I sometimes use Vim, I use web div, editable divs. It doesn't matter to me.

0:47:41.100,0:47:47.300
Text is text. It's whatever. As long as I can press tab and I get a tab, that's all

0:47:47.300,0:47:57.060
I need. But those are kind of funny. So here's a, I have an example here of one. This is

0:47:57.060,0:48:01.580
just one. I saw like seven of these. I think there's a thing going on right now where everyone's

0:48:01.580,0:48:10.740
doing them. But go contribute to these. And now I'm going to talk about, I don't know

0:48:10.740,0:48:17.300
anything about this indie game or anything else. I just know it looked kind of fun. So

0:48:17.300,0:48:21.020
I thought I'd share it just because I kind of want to talk about indie games every now

0:48:21.020,0:48:25.940
and then that piqued my interest. It may be a copy of another indie game. It may be a

0:48:25.940,0:48:33.380
clone. It may be a stolen idea or whatever. The concept is pretty fun. I'm actually going

0:48:33.380,0:48:37.820
to turn it off. It has some music. I don't know if it's copyright. But the idea is that

0:48:37.820,0:48:42.820
you have these little paddles on the bottom and you got to slap the boxes that are coming

0:48:42.820,0:48:50.140
down. And as you rotate them, the paddles on the bottom sticks in place. So you have

0:48:50.140,0:48:53.980
the blue one on the right now. It can wind up all the way on the left. And I thought

0:48:53.980,0:48:59.420
that was kind of a neat little puzzle game. I love puzzle games. I love first person shooters,

0:48:59.420,0:49:04.060
puzzle games, RTS. I love all kinds of games. So I thought this one was kind of fun. So

0:49:04.060,0:49:12.580
I kind of wanted to shout out. Whatever game this is. It's called Swap I guess. Pretty

0:49:12.580,0:49:19.700
neat idea. It's fun. It's simple. Hopefully it's not just going to be a mobile game. Hopefully

0:49:19.700,0:49:23.780
there's going to be more to it. I'm not super into mobile games. But it does have iOS and

0:49:23.780,0:49:30.380
Android here. And it's coming on Steam. So I don't know. If you're a developer, add some

0:49:30.380,0:49:40.380
cool desktop perks. Don't make your game lock down. Don't lock down its potential to mobile

0:49:40.380,0:49:47.900
devices. And that's kind of another thing I guess I'll end on. If you're going to make

0:49:47.900,0:49:55.580
a game and you're going to put it on different devices, one of the things that I don't like,

0:49:55.580,0:50:02.060
for example, is old games like Grand Theft Auto, Vice City or something coming to mobile

0:50:02.060,0:50:08.020
because the controls are clunky. And I didn't buy it because I didn't want to play it on

0:50:08.020,0:50:15.900
phone. I have copies of Vice City on Xbox and PlayStation 2 I think it is over there

0:50:15.900,0:50:23.980
somewhere. So I didn't spend any money on it. But I doubt it has good Bluetooth controller

0:50:23.980,0:50:30.860
support. A lot of games on mobile don't. So if you put your game on Steam or whatever,

0:50:30.860,0:50:35.860
make some controller support on mobile. Put in the extra effort. I know it kind of sucks.

0:50:35.860,0:50:41.660
But let's make mobile games better by adding more support controls. Let's add a whole realm.

0:50:41.660,0:50:47.620
Let's force Google and Apple to have a little tag on there that says, you know, controller

0:50:47.620,0:50:50.860
required or something like that. Let's just make a whole category for it. That would be

0:50:50.860,0:50:56.300
fantastic. I would love that. But anyways, yeah, that was a cool little indie game called

0:50:56.300,0:51:02.740
Swap. Don't know much more than that video. That's all I've seen. So that's about it.

0:51:02.740,0:51:22.740
Thanks for listening and I'll see you guys in the next one. Bye for now.
